{"pageProps":{"plasmicData":{"entryCompMetas":[{"id":"cF1ytNay3k","displayName":"Details","usedComponents":[],"projectId":"3wwtiyGgv2Gzn5cquQ9Prp","name":"Details","renderFile":"render__cF1ytNay3k.js","skeletonFile":"comp__cF1ytNay3k.js","cssFile":"css__cF1ytNay3k.css","path":"/details","isPage":true,"entry":"render__cF1ytNay3k.js","isCode":false,"pageMetadata":{"path":"/details","description":"","title":null,"canonical":null},"metadata":{}}],"bundle":{"modules":{"browser":[{"fileName":"css__cF1ytNay3k.css","source":".Details__root2__m1Bj4{display:flex;flex-direction:column;position:relative;width:100%;height:100%;justify-content:flex-start;align-items:center;padding-left:71px;padding-right:64px;min-width:0;min-height:0}.Details__text__anSa{position:relative;width:100%;height:auto;max-width:800px;margin-top:34px;font-size:30px;min-width:0}.Details__h2__rWoXe{height:59px;margin-top:34px;margin-left:0;padding-left:38px;width:771px}.Details__text__evZM{position:relative;width:100%;height:auto;max-width:726px;font-size:30px;padding-top:60px;min-width:0}.Details__img__k3ZYn{position:relative;object-fit:cover;max-width:100%;margin-top:45px;align-self:center;width:716px;margin-left:0}.Details__img__k3ZYn>picture>img{object-fit:cover}.Details__img__k3ZYn>.__wab_img-spacer>img{object-fit:cover}","type":"asset"},{"fileName":"entrypoint.css","source":".__wab_flex-container{display:flex;flex:1;align-self:stretch;pointer-events:none}.__wab_flex-container>*{pointer-events:auto}.__wab_slot{display:contents}.__wab_slot-string-wrapper{position:relative}.__wab_passthrough{display:contents}.__wab_img-wrapper{position:relative;display:inherit;flex-direction:column;overflow:hidden;flex-shrink:0}.__wab_slot>.__wab_img-wrapper{display:block}.__wab_passthrough>.__wab_img-wrapper{display:block}.__wab_img-spacer-svg{display:block;margin:0;border:0;padding:0}.__wab_img{position:absolute;top:0;left:0;bottom:0;right:0;margin:0;padding:0;border:0;display:block;width:100%;min-width:100%;max-width:100%;min-height:100%;max-height:100%;box-sizing:border-box}.__wab_picture{display:contents}\n:where(.plasmic_default__all){display:block;white-space:inherit;grid-row:auto;grid-column:auto;position:relative;background:0 0;background-size:100% 100%;background-repeat:no-repeat;box-shadow:none;box-sizing:border-box;text-decoration-line:none;margin:0;border-width:0}:where(.__wab_rich_text *),:where(.__wab_text *){white-space:inherit;grid-row:auto;grid-column:auto;background:0 0;background-size:100% 100%;background-repeat:no-repeat;box-shadow:none;box-sizing:border-box;text-decoration-line:none;margin:0;border-width:0}:where(.plasmic_default__img){display:inline-block}:where(.plasmic_default__li){display:list-item}:where(.plasmic_default__span){display:inline;position:static;font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}:where(.__wab_rich_text span),:where(.__wab_text span){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}:where(.plasmic_default__input){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:linear-gradient(#fff,#fff);padding:2px;border:1px solid #d3d3d3}:where(.__wab_rich_text input),:where(.__wab_text input){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:linear-gradient(#fff,#fff);padding:2px;border:1px solid #d3d3d3}:where(.plasmic_default__textarea){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;padding:2px;border:1px solid #d3d3d3}:where(.__wab_rich_text textarea),:where(.__wab_text textarea){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;padding:2px;border:1px solid #d3d3d3}:where(.plasmic_default__button){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:none;align-items:flex-start;text-align:center;padding:2px 6px;border:1px solid #d3d3d3}:where(.__wab_rich_text button),:where(.__wab_text button){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit;background-image:none;align-items:flex-start;text-align:center;padding:2px 6px;border:1px solid #d3d3d3}:where(.plasmic_default__code){font-family:inherit;line-height:inherit}:where(.__wab_rich_text code),:where(.__wab_text code){font-family:inherit;line-height:inherit}:where(.plasmic_default__pre){font-family:inherit;line-height:inherit}:where(.__wab_rich_text pre),:where(.__wab_text pre){font-family:inherit;line-height:inherit}:where(.plasmic_default__p){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}:where(.__wab_rich_text p),:where(.__wab_text p){font-family:inherit;line-height:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;color:inherit;text-transform:inherit}:where(.plasmic_default__h1){font-size:inherit;font-weight:inherit}:where(.__wab_rich_text h1),:where(.__wab_text h1){font-size:inherit;font-weight:inherit}:where(.plasmic_default__h2){font-size:inherit;font-weight:inherit}:where(.__wab_rich_text h2),:where(.__wab_text h2){font-size:inherit;font-weight:inherit}:where(.plasmic_default__h3){font-size:inherit;font-weight:inherit}:where(.__wab_rich_text h3),:where(.__wab_text h3){font-size:inherit;font-weight:inherit}:where(.plasmic_default__h4){font-size:inherit;font-weight:inherit}:where(.__wab_rich_text h4),:where(.__wab_text h4){font-size:inherit;font-weight:inherit}:where(.plasmic_default__h5){font-size:inherit;font-weight:inherit}:where(.__wab_rich_text h5),:where(.__wab_text h5){font-size:inherit;font-weight:inherit}:where(.plasmic_default__h6){font-size:inherit;font-weight:inherit}:where(.__wab_rich_text h6),:where(.__wab_text h6){font-size:inherit;font-weight:inherit}:where(.plasmic_default__address){font-style:inherit}:where(.__wab_rich_text address),:where(.__wab_text address){font-style:inherit}:where(.plasmic_default__a){color:inherit}:where(.__wab_rich_text a),:where(.__wab_text a){color:inherit}:where(.plasmic_default__ol){list-style-type:none;padding:0}:where(.__wab_rich_text ol),:where(.__wab_text ol){list-style-type:none;padding:0}:where(.plasmic_default__ul){list-style-type:none;padding:0}:where(.__wab_rich_text ul),:where(.__wab_text ul){list-style-type:none;padding:0}:where(.plasmic_default__select){padding:2px 6px}:where(.__wab_rich_text select),:where(.__wab_text select){padding:2px 6px}.plasmic_default__component_wrapper{display:grid}.plasmic_default__inline{display:inline}.plasmic_page_wrapper{display:flex;width:100%;min-height:100vh;align-items:stretch;align-self:start}.plasmic_page_wrapper>*{height:auto!important}\n.plasmic_default_styles{--mixin-pT6BcrVH4PQb_font-family:\"Inter\";--mixin-pT6BcrVH4PQb_font-size:18px;--mixin-pT6BcrVH4PQb_font-weight:400;--mixin-pT6BcrVH4PQb_font-style:normal;--mixin-pT6BcrVH4PQb_color:#535353;--mixin-pT6BcrVH4PQb_text-align:left;--mixin-pT6BcrVH4PQb_text-transform:none;--mixin-pT6BcrVH4PQb_line-height:1.5;--mixin-pT6BcrVH4PQb_letter-spacing:normal;--mixin-pT6BcrVH4PQb_white-space:pre-wrap;--mixin-pT6BcrVH4PQb_user-select:text;--mixin-pT6BcrVH4PQb_text-decoration-line:none;--mixin-pT6BcrVH4PQb_text-overflow:clip;--mixin-g9yn132pGZB8_color:#000000;--mixin-g9yn132pGZB8_font-weight:900;--mixin-g9yn132pGZB8_font-size:72px;--mixin-g9yn132pGZB8_line-height:1;--mixin-g9yn132pGZB8_letter-spacing:-4px;--mixin-Q0-v5CMsuVMq_font-family:\"Inter\";--mixin-Q0-v5CMsuVMq_color:#000000;--mixin-Q0-v5CMsuVMq_font-size:48px;--mixin-Q0-v5CMsuVMq_font-weight:700;--mixin-Q0-v5CMsuVMq_letter-spacing:-1px;--mixin-Q0-v5CMsuVMq_line-height:1.1;--mixin-SsAjSYdP9NdX_color:#0070f3;--mixin-3ZrsNx-ZAZ8j_font-family:\"Inter\";--mixin-3ZrsNx-ZAZ8j_color:#000000;--mixin-3ZrsNx-ZAZ8j_font-size:32px;--mixin-3ZrsNx-ZAZ8j_font-weight:600;--mixin-3ZrsNx-ZAZ8j_letter-spacing:-0.8px;--mixin-3ZrsNx-ZAZ8j_line-height:1.2;--mixin-DVjTdlRvLlR__font-family:\"Inter\";--mixin-DVjTdlRvLlR__color:#000000;--mixin-DVjTdlRvLlR__font-size:24px;--mixin-DVjTdlRvLlR__font-weight:600;--mixin-DVjTdlRvLlR__letter-spacing:-0.5px;--mixin-DVjTdlRvLlR__line-height:1.3;--mixin-eY7uRzzs26T6_background:linear-gradient(#f8f8f8, #f8f8f8);--mixin-eY7uRzzs26T6_border-bottom-color:#dddddd;--mixin-eY7uRzzs26T6_border-bottom-style:solid;--mixin-eY7uRzzs26T6_border-bottom-width:1px;--mixin-eY7uRzzs26T6_border-left-color:#dddddd;--mixin-eY7uRzzs26T6_border-left-style:solid;--mixin-eY7uRzzs26T6_border-left-width:1px;--mixin-eY7uRzzs26T6_border-right-color:#dddddd;--mixin-eY7uRzzs26T6_border-right-style:solid;--mixin-eY7uRzzs26T6_border-right-width:1px;--mixin-eY7uRzzs26T6_border-top-color:#dddddd;--mixin-eY7uRzzs26T6_border-top-style:solid;--mixin-eY7uRzzs26T6_border-top-width:1px;--mixin-eY7uRzzs26T6_border-bottom-left-radius:3px;--mixin-eY7uRzzs26T6_border-bottom-right-radius:3px;--mixin-eY7uRzzs26T6_border-top-left-radius:3px;--mixin-eY7uRzzs26T6_border-top-right-radius:3px;--mixin-eY7uRzzs26T6_font-family:\"Inconsolata\";--mixin-eY7uRzzs26T6_padding-bottom:1px;--mixin-eY7uRzzs26T6_padding-left:4px;--mixin-eY7uRzzs26T6_padding-right:4px;--mixin-eY7uRzzs26T6_padding-top:1px;--mixin-F3zL7JfCoeW5_border-left-color:#dddddd;--mixin-F3zL7JfCoeW5_border-left-style:solid;--mixin-F3zL7JfCoeW5_border-left-width:3px;--mixin-F3zL7JfCoeW5_color:#888888;--mixin-F3zL7JfCoeW5_padding-left:10px;--mixin-rOsgfLZn4MGJ_background:linear-gradient(#f8f8f8, #f8f8f8);--mixin-rOsgfLZn4MGJ_border-bottom-color:#dddddd;--mixin-rOsgfLZn4MGJ_border-bottom-style:solid;--mixin-rOsgfLZn4MGJ_border-bottom-width:1px;--mixin-rOsgfLZn4MGJ_border-left-color:#dddddd;--mixin-rOsgfLZn4MGJ_border-left-style:solid;--mixin-rOsgfLZn4MGJ_border-left-width:1px;--mixin-rOsgfLZn4MGJ_border-right-color:#dddddd;--mixin-rOsgfLZn4MGJ_border-right-style:solid;--mixin-rOsgfLZn4MGJ_border-right-width:1px;--mixin-rOsgfLZn4MGJ_border-top-color:#dddddd;--mixin-rOsgfLZn4MGJ_border-top-style:solid;--mixin-rOsgfLZn4MGJ_border-top-width:1px;--mixin-rOsgfLZn4MGJ_border-bottom-left-radius:3px;--mixin-rOsgfLZn4MGJ_border-bottom-right-radius:3px;--mixin-rOsgfLZn4MGJ_border-top-left-radius:3px;--mixin-rOsgfLZn4MGJ_border-top-right-radius:3px;--mixin-rOsgfLZn4MGJ_font-family:\"Inconsolata\";--mixin-rOsgfLZn4MGJ_padding-bottom:3px;--mixin-rOsgfLZn4MGJ_padding-left:6px;--mixin-rOsgfLZn4MGJ_padding-right:6px;--mixin-rOsgfLZn4MGJ_padding-top:3px;--mixin-soAGFh-l45vg_display:flex;--mixin-soAGFh-l45vg_flex-direction:column;--mixin-soAGFh-l45vg_align-items:stretch;--mixin-soAGFh-l45vg_justify-content:flex-start;--mixin-soAGFh-l45vg_list-style-position:outside;--mixin-soAGFh-l45vg_padding-left:40px;--mixin-soAGFh-l45vg_position:relative;--mixin-soAGFh-l45vg_list-style-type:disc;--mixin-uhksh_mZN7a0_display:flex;--mixin-uhksh_mZN7a0_flex-direction:column;--mixin-uhksh_mZN7a0_align-items:stretch;--mixin-uhksh_mZN7a0_justify-content:flex-start;--mixin-uhksh_mZN7a0_list-style-position:outside;--mixin-uhksh_mZN7a0_padding-left:40px;--mixin-uhksh_mZN7a0_position:relative;--mixin-uhksh_mZN7a0_list-style-type:decimal;--mixin-f8k3lRIXDqX34_font-family:\"Inter\";--mixin-f8k3lRIXDqX34_color:#000000;--mixin-f8k3lRIXDqX34_font-size:20px;--mixin-f8k3lRIXDqX34_font-weight:600;--mixin-f8k3lRIXDqX34_letter-spacing:-0.3px;--mixin-f8k3lRIXDqX34_line-height:1.5;--mixin-eDjqr0jwiV6Uv_font-family:\"Inter\";--mixin-eDjqr0jwiV6Uv_color:#000000;--mixin-eDjqr0jwiV6Uv_font-size:16px;--mixin-eDjqr0jwiV6Uv_font-weight:600;--mixin-eDjqr0jwiV6Uv_line-height:1.5;--mixin-PqGY5bBHQX9FY_color:#3291ff}.root_reset_3wwtiyGgv2Gzn5cquQ9Prp{font-family:var(--mixin-pT6BcrVH4PQb_font-family);font-size:var(--mixin-pT6BcrVH4PQb_font-size);font-weight:var(--mixin-pT6BcrVH4PQb_font-weight);font-style:var(--mixin-pT6BcrVH4PQb_font-style);color:var(--mixin-pT6BcrVH4PQb_color);text-align:var(--mixin-pT6BcrVH4PQb_text-align);text-transform:var(--mixin-pT6BcrVH4PQb_text-transform);line-height:var(--mixin-pT6BcrVH4PQb_line-height);letter-spacing:var(--mixin-pT6BcrVH4PQb_letter-spacing);white-space:var(--mixin-pT6BcrVH4PQb_white-space)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__h1),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .h1),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text h1),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__h1){color:var(--mixin-g9yn132pGZB8_color);font-weight:var(--mixin-g9yn132pGZB8_font-weight);font-size:var(--mixin-g9yn132pGZB8_font-size);line-height:var(--mixin-g9yn132pGZB8_line-height);letter-spacing:var(--mixin-g9yn132pGZB8_letter-spacing)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__h2),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .h2),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text h2),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__h2){font-family:var(--mixin-Q0-v5CMsuVMq_font-family);color:var(--mixin-Q0-v5CMsuVMq_color);font-size:var(--mixin-Q0-v5CMsuVMq_font-size);font-weight:var(--mixin-Q0-v5CMsuVMq_font-weight);letter-spacing:var(--mixin-Q0-v5CMsuVMq_letter-spacing);line-height:var(--mixin-Q0-v5CMsuVMq_line-height)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__a),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .a),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text a),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__a){color:var(--mixin-SsAjSYdP9NdX_color)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__h3),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .h3),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text h3),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__h3){font-family:var(--mixin-3ZrsNx-ZAZ8j_font-family);color:var(--mixin-3ZrsNx-ZAZ8j_color);font-size:var(--mixin-3ZrsNx-ZAZ8j_font-size);font-weight:var(--mixin-3ZrsNx-ZAZ8j_font-weight);letter-spacing:var(--mixin-3ZrsNx-ZAZ8j_letter-spacing);line-height:var(--mixin-3ZrsNx-ZAZ8j_line-height)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__h4),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .h4),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text h4),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__h4){font-family:var(--mixin-DVjTdlRvLlR__font-family);color:var(--mixin-DVjTdlRvLlR__color);font-size:var(--mixin-DVjTdlRvLlR__font-size);font-weight:var(--mixin-DVjTdlRvLlR__font-weight);letter-spacing:var(--mixin-DVjTdlRvLlR__letter-spacing);line-height:var(--mixin-DVjTdlRvLlR__line-height)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__code),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .code),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text code),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__code){background:var(--mixin-eY7uRzzs26T6_background);font-family:var(--mixin-eY7uRzzs26T6_font-family);border-radius:var(--mixin-eY7uRzzs26T6_border-top-left-radius) var(--mixin-eY7uRzzs26T6_border-top-right-radius) var(--mixin-eY7uRzzs26T6_border-bottom-right-radius) var(--mixin-eY7uRzzs26T6_border-bottom-left-radius);padding:var(--mixin-eY7uRzzs26T6_padding-top) var(--mixin-eY7uRzzs26T6_padding-right) var(--mixin-eY7uRzzs26T6_padding-bottom) var(--mixin-eY7uRzzs26T6_padding-left);border-top:var(--mixin-eY7uRzzs26T6_border-top-width) var(--mixin-eY7uRzzs26T6_border-top-style) var(--mixin-eY7uRzzs26T6_border-top-color);border-right:var(--mixin-eY7uRzzs26T6_border-right-width) var(--mixin-eY7uRzzs26T6_border-right-style) var(--mixin-eY7uRzzs26T6_border-right-color);border-bottom:var(--mixin-eY7uRzzs26T6_border-bottom-width) var(--mixin-eY7uRzzs26T6_border-bottom-style) var(--mixin-eY7uRzzs26T6_border-bottom-color);border-left:var(--mixin-eY7uRzzs26T6_border-left-width) var(--mixin-eY7uRzzs26T6_border-left-style) var(--mixin-eY7uRzzs26T6_border-left-color)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__blockquote),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .blockquote),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text blockquote),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__blockquote){color:var(--mixin-F3zL7JfCoeW5_color);padding-left:var(--mixin-F3zL7JfCoeW5_padding-left);border-left:var(--mixin-F3zL7JfCoeW5_border-left-width) var(--mixin-F3zL7JfCoeW5_border-left-style) var(--mixin-F3zL7JfCoeW5_border-left-color)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__pre),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .pre),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text pre),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__pre){background:var(--mixin-rOsgfLZn4MGJ_background);font-family:var(--mixin-rOsgfLZn4MGJ_font-family);border-radius:var(--mixin-rOsgfLZn4MGJ_border-top-left-radius) var(--mixin-rOsgfLZn4MGJ_border-top-right-radius) var(--mixin-rOsgfLZn4MGJ_border-bottom-right-radius) var(--mixin-rOsgfLZn4MGJ_border-bottom-left-radius);padding:var(--mixin-rOsgfLZn4MGJ_padding-top) var(--mixin-rOsgfLZn4MGJ_padding-right) var(--mixin-rOsgfLZn4MGJ_padding-bottom) var(--mixin-rOsgfLZn4MGJ_padding-left);border-top:var(--mixin-rOsgfLZn4MGJ_border-top-width) var(--mixin-rOsgfLZn4MGJ_border-top-style) var(--mixin-rOsgfLZn4MGJ_border-top-color);border-right:var(--mixin-rOsgfLZn4MGJ_border-right-width) var(--mixin-rOsgfLZn4MGJ_border-right-style) var(--mixin-rOsgfLZn4MGJ_border-right-color);border-bottom:var(--mixin-rOsgfLZn4MGJ_border-bottom-width) var(--mixin-rOsgfLZn4MGJ_border-bottom-style) var(--mixin-rOsgfLZn4MGJ_border-bottom-color);border-left:var(--mixin-rOsgfLZn4MGJ_border-left-width) var(--mixin-rOsgfLZn4MGJ_border-left-style) var(--mixin-rOsgfLZn4MGJ_border-left-color)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__ul),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .ul),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text ul),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__ul){display:var(--mixin-soAGFh-l45vg_display);flex-direction:var(--mixin-soAGFh-l45vg_flex-direction);align-items:var(--mixin-soAGFh-l45vg_align-items);justify-content:var(--mixin-soAGFh-l45vg_justify-content);list-style-position:var(--mixin-soAGFh-l45vg_list-style-position);padding-left:var(--mixin-soAGFh-l45vg_padding-left);position:var(--mixin-soAGFh-l45vg_position);list-style-type:var(--mixin-soAGFh-l45vg_list-style-type);flex-column-gap:var(--mixin-soAGFh-l45vg_flex-column-gap)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__ol),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .ol),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text ol),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__ol){display:var(--mixin-uhksh_mZN7a0_display);flex-direction:var(--mixin-uhksh_mZN7a0_flex-direction);align-items:var(--mixin-uhksh_mZN7a0_align-items);justify-content:var(--mixin-uhksh_mZN7a0_justify-content);list-style-position:var(--mixin-uhksh_mZN7a0_list-style-position);padding-left:var(--mixin-uhksh_mZN7a0_padding-left);position:var(--mixin-uhksh_mZN7a0_position);list-style-type:var(--mixin-uhksh_mZN7a0_list-style-type);flex-column-gap:var(--mixin-uhksh_mZN7a0_flex-column-gap)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__h5),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .h5),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text h5),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__h5){font-family:var(--mixin-f8k3lRIXDqX34_font-family);color:var(--mixin-f8k3lRIXDqX34_color);font-size:var(--mixin-f8k3lRIXDqX34_font-size);font-weight:var(--mixin-f8k3lRIXDqX34_font-weight);letter-spacing:var(--mixin-f8k3lRIXDqX34_letter-spacing);line-height:var(--mixin-f8k3lRIXDqX34_line-height)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__h6),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .h6),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text h6),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__h6){font-family:var(--mixin-eDjqr0jwiV6Uv_font-family);color:var(--mixin-eDjqr0jwiV6Uv_color);font-size:var(--mixin-eDjqr0jwiV6Uv_font-size);font-weight:var(--mixin-eDjqr0jwiV6Uv_font-weight);line-height:var(--mixin-eDjqr0jwiV6Uv_line-height)}:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .plasmic_default__a:hover),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .a:hover),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp .__wab_text a:hover),:where(.root_reset_3wwtiyGgv2Gzn5cquQ9Prp.plasmic_default__a:hover){color:var(--mixin-PqGY5bBHQX9FY_color)}","type":"asset"},{"fileName":"global__250s3ALkdwuPN.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index.js');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst ScreenContext = React__namespace.createContext(\"PLEASE_RENDER_INSIDE_PROVIDER\" );\n    \n      /**\n       *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n       *  automatically included in your components. Please remove this provider\n       *  from your code.\n       */\n      function ScreenVariantProvider(props) {\n        console.warn('DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.');\n        return props.children;\n      }\n    \n    \nconst useScreenVariants = index.createUseScreenVariants(true,{\n  \"mobileOnly\": \"(min-width:0px) and (max-width:768px)\"\n});\n    /* prettier-ignore-end */\n\nexports.ScreenContext = ScreenContext;\nexports.ScreenVariantProvider = ScreenVariantProvider;\nexports[\"default\"] = ScreenContext;\nexports.useScreenVariants = useScreenVariants;\n","imports":["react","index.js","react-dom"],"type":"code"},{"fileName":"index.js","code":"'use strict';\n\nvar React = require('react');\nvar ReactDOM__default = require('react-dom');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n\tif (e && e.__esModule) return e;\n\tvar n = Object.create(null);\n\tif (e) {\n\t\tObject.keys(e).forEach(function (k) {\n\t\t\tif (k !== 'default') {\n\t\t\t\tvar d = Object.getOwnPropertyDescriptor(e, k);\n\t\t\t\tObject.defineProperty(n, k, d.get ? d : {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () { return e[k]; }\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tn[\"default\"] = e;\n\treturn Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar ReactDOM__default__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM__default);\n\nvar classnames = {exports: {}};\n\n(function (module) {\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n}(classnames));\n\nvar classNames$1 = classnames.exports;\n\nfunction notNil(x) {\r\n    return x != null;\r\n}\r\nfunction pick(obj) {\r\n    var keys = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        keys[_i - 1] = arguments[_i];\r\n    }\r\n    if (Object.keys(obj).length === 0) {\r\n        return obj;\r\n    }\r\n    var res = {};\r\n    for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {\r\n        var key = keys_1[_a];\r\n        if (key in obj) {\r\n            res[key] = obj[key];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction omit(obj) {\r\n    var keys = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        keys[_i - 1] = arguments[_i];\r\n    }\r\n    if (Object.keys(obj).length === 0) {\r\n        return obj;\r\n    }\r\n    var res = {};\r\n    for (var _a = 0, _b = Object.keys(obj); _a < _b.length; _a++) {\r\n        var key = _b[_a];\r\n        if (!keys.includes(key)) {\r\n            res[key] = obj[key];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction isSubset(a1, a2) {\r\n    return a1.every(function (x) { return a2.includes(x); });\r\n}\r\nfunction chainSingleArgFuncs() {\r\n    var funcs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        funcs[_i] = arguments[_i];\r\n    }\r\n    if (funcs.length === 0) {\r\n        return undefined;\r\n    }\r\n    return function (arg) {\r\n        var res = arg;\r\n        for (var _i = 0, funcs_1 = funcs; _i < funcs_1.length; _i++) {\r\n            var func = funcs_1[_i];\r\n            res = func(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nfunction groupBy(collection, keyFunc) {\r\n    var result = {};\r\n    for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\r\n        var obj = collection_1[_i];\r\n        var key = keyFunc(obj);\r\n        if (key in result) {\r\n            result[key].push(obj);\r\n        }\r\n        else {\r\n            result[key] = [obj];\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction mapValues(obj, mapper) {\r\n    var result = {};\r\n    for (var key in obj) {\r\n        result[key] = mapper(obj[key]);\r\n    }\r\n    return result;\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nexports.__assign = function() {\r\n    exports.__assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return exports.__assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nvar isBrowser = typeof window !== \"undefined\";\r\nvar NONE = Symbol(\"NONE\");\r\nvar useIsomorphicLayoutEffect = isBrowser\r\n    ? React__default[\"default\"].useLayoutEffect\r\n    : React__default[\"default\"].useEffect;\r\nfunction createElementWithChildren(elementType, props, children) {\r\n    if (Array.isArray(children)) {\r\n        return React__default[\"default\"].createElement.apply(React__default[\"default\"], __spreadArray([elementType,\r\n            props], children));\r\n    }\r\n    else if (children || \"children\" in props) {\r\n        // Only call React.createElement with `children` if there are actual children,\r\n        // or if there was an explicit (albeit undefined) children passed via\r\n        // props.  Otherwise, if you pass `undefined` as the children argument\r\n        // to React.createElement, the created element will have prop {children: undefined}.\r\n        // If the `root` is an PlasmicGeneratedComponent, and these props with {children: undefined}\r\n        // are used, then it will be taken as a `children` override, and will thus blank out\r\n        // everything under the root node.\r\n        return React__default[\"default\"].createElement(elementType, props, children);\r\n    }\r\n    else {\r\n        return React__default[\"default\"].createElement(elementType, props);\r\n    }\r\n}\r\nfunction ensureNotArray(children) {\r\n    if (Array.isArray(children)) {\r\n        if (children.length === 1) {\r\n            return children[0];\r\n        }\r\n        else {\r\n            return React__default[\"default\"].createElement.apply(React__default[\"default\"], __spreadArray([React__default[\"default\"].Fragment, {}], children));\r\n        }\r\n    }\r\n    else {\r\n        return children;\r\n    }\r\n}\r\nfunction isReactNode(x) {\r\n    return (typeof x === \"string\" || typeof x === \"number\" || React__default[\"default\"].isValidElement(x));\r\n}\r\nfunction mergeProps(props) {\r\n    var restProps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        restProps[_i - 1] = arguments[_i];\r\n    }\r\n    if (restProps.every(function (rest) { return Object.keys(rest).length === 0; })) {\r\n        return props;\r\n    }\r\n    var result = exports.__assign({}, props);\r\n    for (var _a = 0, restProps_1 = restProps; _a < restProps_1.length; _a++) {\r\n        var rest = restProps_1[_a];\r\n        for (var _b = 0, _c = Object.keys(rest); _b < _c.length; _b++) {\r\n            var key = _c[_b];\r\n            result[key] = mergePropVals(key, result[key], rest[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction updateRef(ref, value) {\r\n    if (!ref) {\r\n        return;\r\n    }\r\n    if (typeof ref === \"function\") {\r\n        ref(value);\r\n    }\r\n    else {\r\n        if (!Object.isFrozen(ref)) {\r\n            ref.current = value;\r\n        }\r\n    }\r\n}\r\nfunction mergeRefs() {\r\n    var refs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        refs[_i] = arguments[_i];\r\n    }\r\n    return function (value) {\r\n        for (var _i = 0, refs_1 = refs; _i < refs_1.length; _i++) {\r\n            var ref = refs_1[_i];\r\n            updateRef(ref, value);\r\n        }\r\n    };\r\n}\r\nfunction mergePropVals(name, val1, val2) {\r\n    if (val1 === NONE || val2 === NONE) {\r\n        // The NONE sentinel always skips all merging and returns null\r\n        return null;\r\n    }\r\n    else if (val1 == null) {\r\n        // If either of them is nil, prefer the other\r\n        return val2;\r\n    }\r\n    else if (val2 == null) {\r\n        return val1;\r\n    }\r\n    else if (name === \"className\") {\r\n        // Special case for className -- always combine both class names\r\n        return classNames$1(val1, val2);\r\n    }\r\n    else if (name === \"style\") {\r\n        // Special case for style -- always shallow-merge style dicts\r\n        return exports.__assign(exports.__assign({}, val1), val2);\r\n    }\r\n    else if (name === \"ref\") {\r\n        // Special case for ref\r\n        return mergeRefs(val1, val2);\r\n    }\r\n    else if (typeof val1 !== typeof val2) {\r\n        // If the type of the two values are different, then no way to merge them.\r\n        // Prefer val2.\r\n        return val2;\r\n    }\r\n    else if (name.startsWith(\"on\") && typeof val1 === \"function\") {\r\n        // Special case for event handlers -- always call both handlers\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var res;\r\n            if (typeof val1 === \"function\") {\r\n                res = val1.apply(void 0, args);\r\n            }\r\n            if (typeof val2 === \"function\") {\r\n                res = val2.apply(void 0, args);\r\n            }\r\n            return res;\r\n        };\r\n    }\r\n    else {\r\n        // For all else, prefer val2\r\n        return val2;\r\n    }\r\n}\n\n/**\r\n * Responsive `<img/>` replacement, based on `next/image`\r\n */\r\n// Default image sizes to snap to\r\n// TODO: make this configurable?\r\nvar IMG_SIZES = [16, 32, 48, 64, 96, 128, 256, 384];\r\nvar DEVICE_SIZES = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\r\nvar ALL_SIZES = __spreadArray(__spreadArray([], IMG_SIZES), DEVICE_SIZES);\r\nvar PlasmicImg = React__default[\"default\"].forwardRef(function PlasmicImg(props, outerRef) {\r\n    var src = props.src, className = props.className, displayWidth = props.displayWidth, displayHeight = props.displayHeight, displayMinWidth = props.displayMinWidth, displayMinHeight = props.displayMinHeight, displayMaxWidth = props.displayMaxWidth, displayMaxHeight = props.displayMaxHeight, quality = props.quality, loader = props.loader, imgRef = props.imgRef, style = props.style, loading = props.loading, rest = __rest(props, [\"src\", \"className\", \"displayWidth\", \"displayHeight\", \"displayMinWidth\", \"displayMinHeight\", \"displayMaxWidth\", \"displayMaxHeight\", \"quality\", \"loader\", \"imgRef\", \"style\", \"loading\"]);\r\n    var imgProps = Object.assign({}, rest, {\r\n        // Default loading to \"lazy\" if not specified (which is different from the\r\n        // html img, which defaults to eager!)\r\n        loading: loading !== null && loading !== void 0 ? loading : \"lazy\",\r\n    });\r\n    var _a = typeof src === \"string\" || !src\r\n        ? { fullWidth: undefined, fullHeight: undefined, aspectRatio: undefined }\r\n        : src, fullWidth = _a.fullWidth, fullHeight = _a.fullHeight, aspectRatio = _a.aspectRatio;\r\n    var srcStr = src ? (typeof src === \"string\" ? src : src.src) : \"\";\r\n    // Assume external image if either dimension is null and use usual <img>\r\n    if (fullHeight == null || fullWidth == null) {\r\n        return (React__default[\"default\"].createElement(\"img\", exports.__assign({ src: srcStr, className: className, style: style }, imgProps, { loading: loading, ref: mergeRefs(imgRef, outerRef) })));\r\n    }\r\n    if (isSvg(srcStr) &&\r\n        (displayHeight == null || displayHeight === \"auto\") &&\r\n        (displayWidth == null || displayWidth === \"auto\")) {\r\n        displayWidth = \"100%\";\r\n    }\r\n    if (fullWidth &&\r\n        fullHeight &&\r\n        (!displayWidth || displayWidth === \"auto\") &&\r\n        !!getPixelLength(displayHeight)) {\r\n        // If there's a pixel length specified for displayHeight but not displayWidth,\r\n        // then we can derive the pixel length for displayWidth.  Having an explicit\r\n        // displayWidth makes this a fixed-size image, which makes it possible for us to\r\n        // generate better markup!\r\n        if (!isSvg(srcStr)) {\r\n            // We shouldn't do it for SVGs though, because `fullWidth` and\r\n            // `fullHeight` might have rounded values so the final\r\n            // `displayWidth` could differ by 1px or so.\r\n            displayWidth = (getPixelLength(displayHeight) * fullWidth) / fullHeight;\r\n        }\r\n    }\r\n    var spacerWidth = fullWidth;\r\n    var spacerHeight = fullHeight;\r\n    if (aspectRatio && isFinite(aspectRatio) && isSvg(srcStr)) {\r\n        // For SVGs, fullWidth and fullHeight can be rounded values, which would\r\n        // cause some discrepancy between the actual aspect ratio and the aspect\r\n        // ratio from those values. So, for those cases, we set large width / height\r\n        // values to get a more precise ratio from the spacer.\r\n        spacerWidth = DEFAULT_SVG_WIDTH;\r\n        spacerHeight = Math.round(spacerWidth / aspectRatio);\r\n    }\r\n    var _b = getWidths(displayWidth, fullWidth, {\r\n        minWidth: displayMinWidth,\r\n    }), sizes = _b.sizes, widthDescs = _b.widthDescs;\r\n    var imageLoader = getImageLoader(loader);\r\n    var spacerSvg = \"<svg width=\\\"\" + spacerWidth + \"\\\" height=\\\"\" + spacerHeight + \"\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\"/>\";\r\n    var spacerSvgBase64 = typeof window === \"undefined\"\r\n        ? Buffer.from(spacerSvg).toString(\"base64\")\r\n        : window.btoa(spacerSvg);\r\n    var wrapperStyle = exports.__assign({}, (style || {}));\r\n    var spacerStyle = exports.__assign({}, pick(style || {}, \"objectFit\", \"objectPosition\"));\r\n    if (displayWidth != null && displayWidth !== \"auto\") {\r\n        // If width is set, set it on the wrapper along with min/max width\r\n        // and just use `width: 100%` on the spacer\r\n        spacerStyle.width = \"100%\";\r\n        // Rely on the styles set by `classname` on the wrapper:\r\n        // wrapperStyle.width = displayWidth;\r\n        // wrapperStyle.minWidth = displayMinWidth;\r\n        // wrapperStyle.maxWidth = displayMaxWidth;\r\n    }\r\n    else {\r\n        // Otherwise, we want auto sizing from the spacer, so set width there.\r\n        //\r\n        // But if we have min/max width, it should be set in the wrapper and it\r\n        // can be percentage values (and we add corresponding min/max width to\r\n        // 100% in the spacer). In general it ends up with the correct effect,\r\n        // but some edge cases might make `min-width: 100%` shrink the image more\r\n        // than it should.\r\n        spacerStyle.width = displayWidth;\r\n        wrapperStyle.width = \"auto\";\r\n        if (displayMinWidth) {\r\n            spacerStyle.minWidth = \"100%\";\r\n            // Rely on min-width set by `classname` on the wrapper:\r\n            // wrapperStyle.minWidth = displayMinWidth;\r\n        }\r\n        if (displayMaxWidth != null && displayMaxWidth !== \"none\") {\r\n            spacerStyle.maxWidth = \"100%\";\r\n            // Rely on max-width set by `classname` on the wrapper:\r\n            // wrapperStyle.maxWidth = displayMaxWidth;\r\n        }\r\n    }\r\n    if (displayHeight != null && displayHeight !== \"auto\") {\r\n        spacerStyle.height = \"100%\";\r\n        // wrapperStyle.height = displayHeight;\r\n        // wrapperStyle.minHeight = displayMinHeight;\r\n        // wrapperStyle.maxHeight = displayMaxHeight;\r\n    }\r\n    else {\r\n        spacerStyle.height = displayHeight;\r\n        wrapperStyle.height = \"auto\";\r\n        if (displayMinHeight) {\r\n            spacerStyle.minHeight = \"100%\";\r\n            // wrapperStyle.minHeight = displayMinHeight;\r\n        }\r\n        if (displayMaxHeight != null && displayMaxHeight !== \"none\") {\r\n            spacerStyle.maxHeight = \"100%\";\r\n            // wrapperStyle.maxHeight = displayMaxHeight;\r\n        }\r\n    }\r\n    return (React__default[\"default\"].createElement(\"div\", { className: classNames$1(className, \"__wab_img-wrapper\"), ref: outerRef, style: wrapperStyle },\r\n        React__default[\"default\"].createElement(\"img\", { alt: \"\", \"aria-hidden\": true, className: \"__wab_img-spacer-svg\", src: \"data:image/svg+xml;base64,\" + spacerSvgBase64, style: spacerStyle }),\r\n        makePicture({\r\n            imageLoader: imageLoader,\r\n            widthDescs: widthDescs,\r\n            sizes: sizes,\r\n            src: srcStr,\r\n            quality: quality,\r\n            ref: imgRef,\r\n            style: style ? pick(style, \"objectFit\", \"objectPosition\") : undefined,\r\n            imgProps: imgProps,\r\n            className: \"__wab_img\",\r\n        })));\r\n});\r\nfunction makePicture(opts) {\r\n    // If imageLoader is undefined, then this renders to just a normal\r\n    // <img />.  Else it will render to a <picture> with a <source> for\r\n    // webp, and srcSet/sizes set according to width requirements.\r\n    var imageLoader = opts.imageLoader, widthDescs = opts.widthDescs, src = opts.src, quality = opts.quality, style = opts.style, className = opts.className, sizes = opts.sizes, imgProps = opts.imgProps, ref = opts.ref;\r\n    return (React__default[\"default\"].createElement(\"picture\", { className: \"__wab_picture\" },\r\n        imageLoader && imageLoader.supportsUrl(src) && (React__default[\"default\"].createElement(\"source\", { type: \"image/webp\", srcSet: widthDescs\r\n                .map(function (wd) {\r\n                return imageLoader.transformUrl({\r\n                    src: src,\r\n                    quality: quality,\r\n                    width: wd.width,\r\n                    format: \"webp\",\r\n                }) + \" \" + wd.desc;\r\n            })\r\n                .join(\", \") })),\r\n        React__default[\"default\"].createElement(\"img\", exports.__assign({}, imgProps, { ref: ref, className: className, decoding: \"async\", src: imageLoader && imageLoader.supportsUrl(src)\r\n                ? imageLoader.transformUrl({\r\n                    src: src,\r\n                    quality: quality,\r\n                    width: widthDescs[widthDescs.length - 1].width,\r\n                })\r\n                : src, srcSet: imageLoader && imageLoader.supportsUrl(src)\r\n                ? widthDescs\r\n                    .map(function (wd) {\r\n                    return imageLoader.transformUrl({\r\n                        src: src,\r\n                        quality: quality,\r\n                        width: wd.width,\r\n                    }) + \" \" + wd.desc;\r\n                })\r\n                    .join(\", \")\r\n                : undefined, sizes: imageLoader && imageLoader.supportsUrl(src) ? sizes : undefined, style: exports.__assign(exports.__assign({}, (style ? pick(style, \"objectFit\", \"objectPosition\") : {})), { width: 0, height: 0 }) }))));\r\n}\r\nvar DEFAULT_SVG_WIDTH = 10000;\r\nfunction isSvg(src) {\r\n    return src.endsWith(\".svg\") || src.startsWith(\"data:image/svg\");\r\n}\r\nfunction getClosestPresetSize(width, fullWidth) {\r\n    var _a;\r\n    var nextBiggerIndex = (_a = ALL_SIZES.findIndex(function (w) { return w >= width; })) !== null && _a !== void 0 ? _a : ALL_SIZES.length - 1;\r\n    var nextBigger = ALL_SIZES[nextBiggerIndex];\r\n    if (nextBigger >= fullWidth) {\r\n        // If the requested width is larger than the fullWidth,\r\n        // we just use the original width instead. It's impossible\r\n        // to make an image bigger than fullWidth!\r\n        return undefined;\r\n    }\r\n    else if (nextBiggerIndex + 1 < ALL_SIZES.length &&\r\n        fullWidth <= ALL_SIZES[nextBiggerIndex + 1]) {\r\n        // If the fullWidth is just between nextBigger and the one after that,\r\n        // then also might as well just use the original size (so, width is 30,\r\n        // nextBigger is 32, then we just use the original as long as fullWidth is\r\n        // less than 48)\r\n        return undefined;\r\n    }\r\n    return nextBigger;\r\n}\r\n/**\r\n * Computes the appropriate srcSet and sizes to use\r\n */\r\nfunction getWidths(width, fullWidth, extra) {\r\n    var minWidth = extra === null || extra === void 0 ? void 0 : extra.minWidth;\r\n    var pixelWidth = getPixelLength(width);\r\n    var pixelMinWidth = getPixelLength(minWidth);\r\n    if (pixelWidth != null && (!minWidth || pixelMinWidth != null)) {\r\n        // If there's an exact width, then we just need to display it at 1x and 2x density\r\n        return {\r\n            widthDescs: [\r\n                {\r\n                    width: getClosestPresetSize(Math.max(pixelWidth, pixelMinWidth !== null && pixelMinWidth !== void 0 ? pixelMinWidth : 0), fullWidth),\r\n                    desc: \"1x\",\r\n                },\r\n                {\r\n                    width: getClosestPresetSize(Math.max(pixelWidth, pixelMinWidth !== null && pixelMinWidth !== void 0 ? pixelMinWidth : 0) * 2, fullWidth),\r\n                    desc: \"2x\",\r\n                },\r\n            ],\r\n            sizes: undefined,\r\n        };\r\n    }\r\n    // Otherwise we don't know what sizes we'll end up, so we just cap it at\r\n    // device width.  TODO: do better!\r\n    var usefulSizes = DEVICE_SIZES.filter(function (size) { return !fullWidth || size < fullWidth; });\r\n    if (!!fullWidth && usefulSizes.length === 0) {\r\n        // image fullWidth is smaller than all device sizes.  So all we can do\r\n        // is offer 1x\r\n        return {\r\n            widthDescs: [\r\n                {\r\n                    width: getClosestPresetSize(fullWidth, fullWidth),\r\n                    desc: \"1x\",\r\n                },\r\n            ],\r\n            sizes: undefined,\r\n        };\r\n    }\r\n    return {\r\n        widthDescs: usefulSizes.map(function (size) { return ({\r\n            width: getClosestPresetSize(size, fullWidth),\r\n            // If this is the last (buggest) useful width, but it is\r\n            // still within the bounds set by DEVICE_SIZES, then just\r\n            // use the original, unresized image.  This means if we match\r\n            // the largest size, we use unresized and best quality image.\r\n            // We only do this, though, if fullWidth is \"reasonable\" --\r\n            // smaller than the largest size we would consider.\r\n            // i === usefulSizes.length - 1 &&\r\n            // fullWidth < DEVICE_SIZES[DEVICE_SIZES.length - 1]\r\n            //   ? undefined\r\n            //   : size,\r\n            desc: size + \"w\",\r\n        }); }),\r\n        sizes: \"100vw\",\r\n    };\r\n}\r\nfunction getPixelLength(length) {\r\n    if (length == null || length == \"\") {\r\n        return undefined;\r\n    }\r\n    if (typeof length === \"number\") {\r\n        return length;\r\n    }\r\n    var parsed = parseNumeric(length);\r\n    if (parsed && (!parsed.units || parsed.units === \"px\")) {\r\n        return parsed.num;\r\n    }\r\n    return undefined;\r\n}\r\nfunction parseNumeric(val) {\r\n    // Parse strings like \"30\", \"30px\", \"30%\", \"30px /* blah blah */\"\r\n    var res = val.match(/^\\s*(-?(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+))\\s*([a-z]*|%)\\s*(?:\\/\\*.*)?$/i);\r\n    if (res == null) {\r\n        return undefined;\r\n    }\r\n    var num = res[1];\r\n    var units = res[2];\r\n    return { num: +num, units: units };\r\n}\r\nfunction getImageLoader(loader) {\r\n    if (loader == null) {\r\n        return undefined;\r\n    }\r\n    else if (loader === \"plasmic\") {\r\n        return PLASMIC_IMAGE_LOADER;\r\n    }\r\n    else {\r\n        return loader;\r\n    }\r\n}\r\nvar PLASMIC_IMAGE_LOADER = {\r\n    supportsUrl: function (src) {\r\n        return src.startsWith(\"https://img.plasmic.app\") && !isSvg(src);\r\n    },\r\n    transformUrl: function (opts) {\r\n        var _a;\r\n        var params = [\r\n            opts.width ? \"w=\" + opts.width : undefined,\r\n            \"q=\" + ((_a = opts.quality) !== null && _a !== void 0 ? _a : 75),\r\n            opts.format ? \"f=\" + opts.format : undefined,\r\n        ].filter(function (x) { return !!x; });\r\n        return opts.src + \"?\" + params.join(\"&\");\r\n    },\r\n};\n\nfunction $parcel$export$4(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $9d939cbc98267846$exports = {};\n\n$parcel$export$4($9d939cbc98267846$exports, \"SSRProvider\", () => $9d939cbc98267846$export$9f8ac96af4b1b2ae);\n$parcel$export$4($9d939cbc98267846$exports, \"useSSRSafeId\", () => $9d939cbc98267846$export$619500959fc48b26);\n$parcel$export$4($9d939cbc98267846$exports, \"useIsSSR\", () => $9d939cbc98267846$export$535bd6ca7f90a273);\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst $9d939cbc98267846$var$defaultContext = {\n    prefix: String(Math.round(Math.random() * 10000000000)),\n    current: 0\n};\nconst $9d939cbc98267846$var$SSRContext = /*#__PURE__*/ React__default[\"default\"].createContext($9d939cbc98267846$var$defaultContext);\nfunction $9d939cbc98267846$export$9f8ac96af4b1b2ae(props) {\n    let cur = React.useContext($9d939cbc98267846$var$SSRContext);\n    let value = React.useMemo(()=>({\n            // If this is the first SSRProvider, start with an empty string prefix, otherwise\n            // append and increment the counter.\n            prefix: cur === $9d939cbc98267846$var$defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n            current: 0\n        })\n    , [\n        cur\n    ]);\n    return(/*#__PURE__*/ React__default[\"default\"].createElement($9d939cbc98267846$var$SSRContext.Provider, {\n        value: value\n    }, props.children));\n}\nlet $9d939cbc98267846$var$canUseDOM = Boolean(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction $9d939cbc98267846$export$619500959fc48b26(defaultId) {\n    let ctx = React.useContext($9d939cbc98267846$var$SSRContext);\n    // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n    // provide a warning to hint to the developer to add one.\n    if (ctx === $9d939cbc98267846$var$defaultContext && !$9d939cbc98267846$var$canUseDOM) console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n    return React.useMemo(()=>defaultId || `react-aria${ctx.prefix}-${++ctx.current}`\n    , [\n        defaultId\n    ]);\n}\nfunction $9d939cbc98267846$export$535bd6ca7f90a273() {\n    let cur = React.useContext($9d939cbc98267846$var$SSRContext);\n    let isInSSRContext = cur !== $9d939cbc98267846$var$defaultContext;\n    let [isSSR, setIsSSR] = React.useState(isInSSRContext);\n    // If on the client, and the component was initially server rendered,\n    // then schedule a layout effect to update the component after hydration.\n    if (typeof window !== 'undefined' && isInSSRContext) // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(()=>{\n        setIsSSR(false);\n    }, []);\n    return isSSR;\n}\n\nvar PlasmicTranslatorContext = React__default[\"default\"].createContext(undefined);\r\n\nvar PlasmicRootContext = React__namespace.createContext(undefined);\r\nfunction PlasmicRootProvider(props) {\r\n    var platform = props.platform, children = props.children;\r\n    var context = React__namespace.useMemo(function () { return ({\r\n        platform: platform,\r\n    }); }, [platform]);\r\n    return (React__namespace.createElement(PlasmicRootContext.Provider, { value: context },\r\n        React__namespace.createElement($9d939cbc98267846$export$9f8ac96af4b1b2ae, null,\r\n            React__namespace.createElement(PlasmicTranslatorContext.Provider, { value: props.translator }, children))));\r\n}\n\nfunction toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nfunction $6nfFC$clsx () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x;\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n\nfunction $parcel$export$3(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $bfee1151ccb0650f$exports = {};\n\n$parcel$export$3($bfee1151ccb0650f$exports, \"useControlledState\", () => $bfee1151ccb0650f$export$40bfa8c7b0832715);\n\nfunction $bfee1151ccb0650f$export$40bfa8c7b0832715(value1, defaultValue, onChange) {\n    let [stateValue, setStateValue] = React.useState(value1 || defaultValue);\n    let ref = React.useRef(value1 !== undefined);\n    let wasControlled = ref.current;\n    let isControlled = value1 !== undefined;\n    // Internal state reference for useCallback\n    let stateRef = React.useRef(stateValue);\n    if (wasControlled !== isControlled) console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n    ref.current = isControlled;\n    let setValue = React.useCallback((value2, ...args)=>{\n        let onChangeCaller = (value, ...onChangeArgs)=>{\n            if (onChange) {\n                if (!Object.is(stateRef.current, value)) onChange(value, ...onChangeArgs);\n            }\n            if (!isControlled) stateRef.current = value;\n        };\n        if (typeof value2 === 'function') {\n            console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n            // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n            // when someone using useControlledState calls setControlledState(myFunc)\n            // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n            // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n            // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n            let updateFunction = (oldValue, ...functionArgs)=>{\n                let interceptedValue = value2(isControlled ? stateRef.current : oldValue, ...functionArgs);\n                onChangeCaller(interceptedValue, ...args);\n                if (!isControlled) return interceptedValue;\n                return oldValue;\n            };\n            setStateValue(updateFunction);\n        } else {\n            if (!isControlled) setStateValue(value2);\n            onChangeCaller(value2, ...args);\n        }\n    }, [\n        isControlled,\n        onChange\n    ]);\n    // If a controlled component's value prop changes, we need to update stateRef\n    if (isControlled) stateRef.current = value1;\n    else value1 = stateValue;\n    return [\n        value1,\n        setValue\n    ];\n}\n\n\nvar $48d9f1d165180307$exports = {};\n\n$parcel$export$3($48d9f1d165180307$exports, \"clamp\", () => $48d9f1d165180307$export$7d15b64cf5a3a4c4);\n$parcel$export$3($48d9f1d165180307$exports, \"snapValueToStep\", () => $48d9f1d165180307$export$cb6e0bb50bc19463);\n$parcel$export$3($48d9f1d165180307$exports, \"toFixedNumber\", () => $48d9f1d165180307$export$b6268554fba451f);\nfunction $48d9f1d165180307$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {\n    let newValue = Math.min(Math.max(value, min), max);\n    return newValue;\n}\nfunction $48d9f1d165180307$export$cb6e0bb50bc19463(value, min, max, step) {\n    let remainder = (value - (isNaN(min) ? 0 : min)) % step;\n    let snappedValue = Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder;\n    if (!isNaN(min)) {\n        if (snappedValue < min) snappedValue = min;\n        else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor((max - min) / step) * step;\n    } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor(max / step) * step;\n    // correct floating point behavior by rounding to step precision\n    let string = step.toString();\n    let index = string.indexOf('.');\n    let precision = index >= 0 ? string.length - index : 0;\n    if (precision > 0) {\n        let pow = Math.pow(10, precision);\n        snappedValue = Math.round(snappedValue * pow) / pow;\n    }\n    return snappedValue;\n}\nfunction $48d9f1d165180307$export$b6268554fba451f(value, digits, base = 10) {\n    const pow = Math.pow(base, digits);\n    return Math.round(value * pow) / pow;\n}\n\nfunction $parcel$export$2(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $bdb11010cef70236$exports = {};\n\n$parcel$export$2($bdb11010cef70236$exports, \"useId\", () => $bdb11010cef70236$export$f680877a34711e37);\n$parcel$export$2($bdb11010cef70236$exports, \"mergeIds\", () => $bdb11010cef70236$export$cd8c9cb68f842629);\n$parcel$export$2($bdb11010cef70236$exports, \"useSlotId\", () => $bdb11010cef70236$export$b4cc09c592e8fdb8);\n\nvar $f0a04ccd8dbdd83b$exports = {};\n\n$parcel$export$2($f0a04ccd8dbdd83b$exports, \"useLayoutEffect\", () => $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c);\n\nconst $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof window !== 'undefined' ? React__default[\"default\"].useLayoutEffect : ()=>{\n};\n\n\n\n\nlet $bdb11010cef70236$var$idsUpdaterMap = new Map();\nfunction $bdb11010cef70236$export$f680877a34711e37(defaultId) {\n    let isRendering = React.useRef(true);\n    isRendering.current = true;\n    let [value, setValue] = React.useState(defaultId);\n    let nextId = React.useRef(null);\n    let res = $9d939cbc98267846$export$619500959fc48b26(value);\n    // don't memo this, we want it new each render so that the Effects always run\n    let updateValue = (val)=>{\n        if (!isRendering.current) setValue(val);\n        else nextId.current = val;\n    };\n    $bdb11010cef70236$var$idsUpdaterMap.set(res, updateValue);\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        isRendering.current = false;\n    }, [\n        updateValue\n    ]);\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        let r = res;\n        return ()=>{\n            $bdb11010cef70236$var$idsUpdaterMap.delete(r);\n        };\n    }, [\n        res\n    ]);\n    React.useEffect(()=>{\n        let newId = nextId.current;\n        if (newId) {\n            setValue(newId);\n            nextId.current = null;\n        }\n    }, [\n        setValue,\n        updateValue\n    ]);\n    return res;\n}\nfunction $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {\n    if (idA === idB) return idA;\n    let setIdA = $bdb11010cef70236$var$idsUpdaterMap.get(idA);\n    if (setIdA) {\n        setIdA(idB);\n        return idB;\n    }\n    let setIdB = $bdb11010cef70236$var$idsUpdaterMap.get(idB);\n    if (setIdB) {\n        setIdB(idA);\n        return idA;\n    }\n    return idB;\n}\nfunction $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {\n    let id = $bdb11010cef70236$export$f680877a34711e37();\n    let [resolvedId, setResolvedId] = $1dbecbe27a04f9af$export$14d238f342723f25(id);\n    let updateId = React.useCallback(()=>{\n        setResolvedId(function*() {\n            yield id;\n            yield document.getElementById(id) ? id : null;\n        });\n    }, [\n        id,\n        setResolvedId\n    ]);\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(updateId, [\n        id,\n        updateId,\n        ...depArray\n    ]);\n    return resolvedId;\n}\n\n\nvar $ff5963eb1fccf552$exports = {};\n\n$parcel$export$2($ff5963eb1fccf552$exports, \"chain\", () => $ff5963eb1fccf552$export$e08e3b67e392101e);\nfunction $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {\n    return (...args)=>{\n        for (let callback of callbacks)if (typeof callback === 'function') callback(...args);\n    };\n}\n\n\nvar $3ef42575df84b30b$exports = {};\n\n$parcel$export$2($3ef42575df84b30b$exports, \"mergeProps\", () => $3ef42575df84b30b$export$9d1611c77c2fe928);\n\n\n\nfunction $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {\n    // Start with a base clone of the first argument. This is a lot faster than starting\n    // with an empty object and adding properties as we go.\n    let result = {\n        ...args[0]\n    };\n    for(let i = 1; i < args.length; i++){\n        let props = args[i];\n        for(let key in props){\n            let a = result[key];\n            let b = props[key];\n            // Chain events\n            if (typeof a === 'function' && typeof b === 'function' && // This is a lot faster than a regex.\n            key[0] === 'o' && key[1] === 'n' && key.charCodeAt(2) >= /* 'A' */ 65 && key.charCodeAt(2) <= /* 'Z' */ 90) result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e(a, b);\n            else if ((key === 'className' || key === 'UNSAFE_className') && typeof a === 'string' && typeof b === 'string') result[key] = $6nfFC$clsx(a, b);\n            else if (key === 'id' && a && b) result.id = $bdb11010cef70236$export$cd8c9cb68f842629(a, b);\n            else result[key] = b !== undefined ? b : a;\n        }\n    }\n    return result;\n}\n\n\nvar $5dc95899b306f630$exports = {};\n\n$parcel$export$2($5dc95899b306f630$exports, \"mergeRefs\", () => $5dc95899b306f630$export$c9058316764c140e);\nfunction $5dc95899b306f630$export$c9058316764c140e(...refs) {\n    return (value)=>{\n        for (let ref of refs){\n            if (typeof ref === 'function') ref(value);\n            else if (ref != null) ref.current = value;\n        }\n    };\n}\n\n\nvar $65484d02dcb7eb3e$exports = {};\n\n$parcel$export$2($65484d02dcb7eb3e$exports, \"filterDOMProps\", () => $65484d02dcb7eb3e$export$457c3d6518dd4c6f);\nconst $65484d02dcb7eb3e$var$DOMPropNames = new Set([\n    'id'\n]);\nconst $65484d02dcb7eb3e$var$labelablePropNames = new Set([\n    'aria-label',\n    'aria-labelledby',\n    'aria-describedby',\n    'aria-details'\n]);\nconst $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;\nfunction $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {\n}) {\n    let { labelable: labelable , propNames: propNames  } = opts;\n    let filteredProps = {\n    };\n    for(const prop in props)if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop))) filteredProps[prop] = props[prop];\n    return filteredProps;\n}\n\n\nvar $7215afc6de606d6b$exports = {};\n\n$parcel$export$2($7215afc6de606d6b$exports, \"focusWithoutScrolling\", () => $7215afc6de606d6b$export$de79e2c695e052f3);\nfunction $7215afc6de606d6b$export$de79e2c695e052f3(element) {\n    if ($7215afc6de606d6b$var$supportsPreventScroll()) element.focus({\n        preventScroll: true\n    });\n    else {\n        let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);\n        element.focus();\n        $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);\n    }\n}\nlet $7215afc6de606d6b$var$supportsPreventScrollCached = null;\nfunction $7215afc6de606d6b$var$supportsPreventScroll() {\n    if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {\n        $7215afc6de606d6b$var$supportsPreventScrollCached = false;\n        try {\n            var focusElem = document.createElement('div');\n            focusElem.focus({\n                get preventScroll () {\n                    $7215afc6de606d6b$var$supportsPreventScrollCached = true;\n                    return true;\n                }\n            });\n        } catch (e) {\n        // Ignore\n        }\n    }\n    return $7215afc6de606d6b$var$supportsPreventScrollCached;\n}\nfunction $7215afc6de606d6b$var$getScrollableElements(element) {\n    var parent = element.parentNode;\n    var scrollableElements = [];\n    var rootScrollingElement = document.scrollingElement || document.documentElement;\n    while(parent instanceof HTMLElement && parent !== rootScrollingElement){\n        if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth) scrollableElements.push({\n            element: parent,\n            scrollTop: parent.scrollTop,\n            scrollLeft: parent.scrollLeft\n        });\n        parent = parent.parentNode;\n    }\n    if (rootScrollingElement instanceof HTMLElement) scrollableElements.push({\n        element: rootScrollingElement,\n        scrollTop: rootScrollingElement.scrollTop,\n        scrollLeft: rootScrollingElement.scrollLeft\n    });\n    return scrollableElements;\n}\nfunction $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {\n    for (let { element: element , scrollTop: scrollTop , scrollLeft: scrollLeft  } of scrollableElements){\n        element.scrollTop = scrollTop;\n        element.scrollLeft = scrollLeft;\n    }\n}\n\n\nvar $ab71dadb03a6fb2e$exports = {};\n\n$parcel$export$2($ab71dadb03a6fb2e$exports, \"getOffset\", () => $ab71dadb03a6fb2e$export$622cea445a1c5b7d);\nfunction $ab71dadb03a6fb2e$export$622cea445a1c5b7d(element, reverse, orientation = 'horizontal') {\n    let rect = element.getBoundingClientRect();\n    if (reverse) return orientation === 'horizontal' ? rect.right : rect.bottom;\n    return orientation === 'horizontal' ? rect.left : rect.top;\n}\n\n\nvar $103b0e103f1b5952$exports = {};\n\n$parcel$export$2($103b0e103f1b5952$exports, \"clamp\", () => $48d9f1d165180307$export$7d15b64cf5a3a4c4);\n$parcel$export$2($103b0e103f1b5952$exports, \"snapValueToStep\", () => $48d9f1d165180307$export$cb6e0bb50bc19463);\n\n\n\nvar $bbed8b41f857bcc0$exports = {};\n\n$parcel$export$2($bbed8b41f857bcc0$exports, \"runAfterTransition\", () => $bbed8b41f857bcc0$export$24490316f764c430);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // We store a global list of elements that are currently transitioning,\n// mapped to a set of CSS properties that are transitioning for that element.\n// This is necessary rather than a simple count of transitions because of browser\n// bugs, e.g. Chrome sometimes fires both transitionend and transitioncancel rather\n// than one or the other. So we need to track what's actually transitioning so that\n// we can ignore these duplicate events.\nlet $bbed8b41f857bcc0$var$transitionsByElement = new Map();\n// A list of callbacks to call once there are no transitioning elements.\nlet $bbed8b41f857bcc0$var$transitionCallbacks = new Set();\nfunction $bbed8b41f857bcc0$var$setupGlobalEvents() {\n    if (typeof window === 'undefined') return;\n    let onTransitionStart = (e)=>{\n        // Add the transitioning property to the list for this element.\n        let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);\n        if (!transitions) {\n            transitions = new Set();\n            $bbed8b41f857bcc0$var$transitionsByElement.set(e.target, transitions);\n            // The transitioncancel event must be registered on the element itself, rather than as a global\n            // event. This enables us to handle when the node is deleted from the document while it is transitioning.\n            // In that case, the cancel event would have nowhere to bubble to so we need to handle it directly.\n            e.target.addEventListener('transitioncancel', onTransitionEnd);\n        }\n        transitions.add(e.propertyName);\n    };\n    let onTransitionEnd = (e)=>{\n        // Remove property from list of transitioning properties.\n        let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);\n        if (!properties) return;\n        properties.delete(e.propertyName);\n        // If empty, remove transitioncancel event, and remove the element from the list of transitioning elements.\n        if (properties.size === 0) {\n            e.target.removeEventListener('transitioncancel', onTransitionEnd);\n            $bbed8b41f857bcc0$var$transitionsByElement.delete(e.target);\n        }\n        // If no transitioning elements, call all of the queued callbacks.\n        if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {\n            for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks)cb();\n            $bbed8b41f857bcc0$var$transitionCallbacks.clear();\n        }\n    };\n    document.body.addEventListener('transitionrun', onTransitionStart);\n    document.body.addEventListener('transitionend', onTransitionEnd);\n}\nif (typeof document !== 'undefined') {\n    if (document.readyState !== 'loading') $bbed8b41f857bcc0$var$setupGlobalEvents();\n    else document.addEventListener('DOMContentLoaded', $bbed8b41f857bcc0$var$setupGlobalEvents);\n}\nfunction $bbed8b41f857bcc0$export$24490316f764c430(fn) {\n    // Wait one frame to see if an animation starts, e.g. a transition on mount.\n    requestAnimationFrame(()=>{\n        // If no transitions are running, call the function immediately.\n        // Otherwise, add it to a list of callbacks to run at the end of the animation.\n        if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) fn();\n        else $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);\n    });\n}\n\n\nvar $9cc09df9fd7676be$exports = {};\n\n$parcel$export$2($9cc09df9fd7676be$exports, \"useDrag1D\", () => $9cc09df9fd7676be$export$7bbed75feba39706);\n\n\n// Keep track of elements that we are currently handling dragging for via useDrag1D.\n// If there's an ancestor and a descendant both using useDrag1D(), and the user starts\n// dragging the descendant, we don't want useDrag1D events to fire for the ancestor.\nconst $9cc09df9fd7676be$var$draggingElements = [];\nfunction $9cc09df9fd7676be$export$7bbed75feba39706(props) {\n    console.warn('useDrag1D is deprecated, please use `useMove` instead https://react-spectrum.adobe.com/react-aria/useMove.html');\n    let { containerRef: containerRef , reverse: reverse , orientation: orientation , onHover: onHover , onDrag: onDrag , onPositionChange: onPositionChange , onIncrement: onIncrement , onDecrement: onDecrement , onIncrementToMax: onIncrementToMax , onDecrementToMin: onDecrementToMin , onCollapseToggle: onCollapseToggle  } = props;\n    let getPosition = (e)=>orientation === 'horizontal' ? e.clientX : e.clientY\n    ;\n    let getNextOffset = (e)=>{\n        let containerOffset = $ab71dadb03a6fb2e$export$622cea445a1c5b7d(containerRef.current, reverse, orientation);\n        let mouseOffset = getPosition(e);\n        let nextOffset = reverse ? containerOffset - mouseOffset : mouseOffset - containerOffset;\n        return nextOffset;\n    };\n    let dragging = React.useRef(false);\n    let prevPosition = React.useRef(0);\n    // Keep track of the current handlers in a ref so that the events can access them.\n    let handlers = React.useRef({\n        onPositionChange: onPositionChange,\n        onDrag: onDrag\n    });\n    handlers.current.onDrag = onDrag;\n    handlers.current.onPositionChange = onPositionChange;\n    let onMouseDragged = (e)=>{\n        e.preventDefault();\n        let nextOffset = getNextOffset(e);\n        if (!dragging.current) {\n            dragging.current = true;\n            if (handlers.current.onDrag) handlers.current.onDrag(true);\n            if (handlers.current.onPositionChange) handlers.current.onPositionChange(nextOffset);\n        }\n        if (prevPosition.current === nextOffset) return;\n        prevPosition.current = nextOffset;\n        if (onPositionChange) onPositionChange(nextOffset);\n    };\n    let onMouseUp = (e)=>{\n        const target = e.target;\n        dragging.current = false;\n        let nextOffset = getNextOffset(e);\n        if (handlers.current.onDrag) handlers.current.onDrag(false);\n        if (handlers.current.onPositionChange) handlers.current.onPositionChange(nextOffset);\n        $9cc09df9fd7676be$var$draggingElements.splice($9cc09df9fd7676be$var$draggingElements.indexOf(target), 1);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        window.removeEventListener('mousemove', onMouseDragged, false);\n    };\n    let onMouseDown = (e)=>{\n        const target = e.currentTarget;\n        // If we're already handling dragging on a descendant with useDrag1D, then\n        // we don't want to handle the drag motion on this target as well.\n        if ($9cc09df9fd7676be$var$draggingElements.some((elt)=>target.contains(elt)\n        )) return;\n        $9cc09df9fd7676be$var$draggingElements.push(target);\n        window.addEventListener('mousemove', onMouseDragged, false);\n        window.addEventListener('mouseup', onMouseUp, false);\n    };\n    let onMouseEnter = ()=>{\n        if (onHover) onHover(true);\n    };\n    let onMouseOut = ()=>{\n        if (onHover) onHover(false);\n    };\n    let onKeyDown = (e)=>{\n        switch(e.key){\n            case 'Left':\n            case 'ArrowLeft':\n                if (orientation === 'horizontal') {\n                    e.preventDefault();\n                    if (onDecrement && !reverse) onDecrement();\n                    else if (onIncrement && reverse) onIncrement();\n                }\n                break;\n            case 'Up':\n            case 'ArrowUp':\n                if (orientation === 'vertical') {\n                    e.preventDefault();\n                    if (onDecrement && !reverse) onDecrement();\n                    else if (onIncrement && reverse) onIncrement();\n                }\n                break;\n            case 'Right':\n            case 'ArrowRight':\n                if (orientation === 'horizontal') {\n                    e.preventDefault();\n                    if (onIncrement && !reverse) onIncrement();\n                    else if (onDecrement && reverse) onDecrement();\n                }\n                break;\n            case 'Down':\n            case 'ArrowDown':\n                if (orientation === 'vertical') {\n                    e.preventDefault();\n                    if (onIncrement && !reverse) onIncrement();\n                    else if (onDecrement && reverse) onDecrement();\n                }\n                break;\n            case 'Home':\n                e.preventDefault();\n                if (onDecrementToMin) onDecrementToMin();\n                break;\n            case 'End':\n                e.preventDefault();\n                if (onIncrementToMax) onIncrementToMax();\n                break;\n            case 'Enter':\n                e.preventDefault();\n                if (onCollapseToggle) onCollapseToggle();\n                break;\n        }\n    };\n    return {\n        onMouseDown: onMouseDown,\n        onMouseEnter: onMouseEnter,\n        onMouseOut: onMouseOut,\n        onKeyDown: onKeyDown\n    };\n}\n\n\nvar $03deb23ff14920c4$exports = {};\n\n$parcel$export$2($03deb23ff14920c4$exports, \"useGlobalListeners\", () => $03deb23ff14920c4$export$4eaf04e54aa8eed6);\n\nfunction $03deb23ff14920c4$export$4eaf04e54aa8eed6() {\n    let globalListeners = React.useRef(new Map());\n    let addGlobalListener = React.useCallback((eventTarget, type, listener, options)=>{\n        // Make sure we remove the listener after it is called with the `once` option.\n        let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args)=>{\n            globalListeners.current.delete(listener);\n            listener(...args);\n        } : listener;\n        globalListeners.current.set(listener, {\n            type: type,\n            eventTarget: eventTarget,\n            fn: fn,\n            options: options\n        });\n        eventTarget.addEventListener(type, listener, options);\n    }, []);\n    let removeGlobalListener = React.useCallback((eventTarget, type, listener, options)=>{\n        var ref;\n        let fn = ((ref = globalListeners.current.get(listener)) === null || ref === void 0 ? void 0 : ref.fn) || listener;\n        eventTarget.removeEventListener(type, fn, options);\n        globalListeners.current.delete(listener);\n    }, []);\n    let removeAllGlobalListeners = React.useCallback(()=>{\n        globalListeners.current.forEach((value, key)=>{\n            removeGlobalListener(value.eventTarget, value.type, key, value.options);\n        });\n    }, [\n        removeGlobalListener\n    ]);\n    // eslint-disable-next-line arrow-body-style\n    React.useEffect(()=>{\n        return removeAllGlobalListeners;\n    }, [\n        removeAllGlobalListeners\n    ]);\n    return {\n        addGlobalListener: addGlobalListener,\n        removeGlobalListener: removeGlobalListener,\n        removeAllGlobalListeners: removeAllGlobalListeners\n    };\n}\n\n\nvar $313b98861ee5dd6c$exports = {};\n\n$parcel$export$2($313b98861ee5dd6c$exports, \"useLabels\", () => $313b98861ee5dd6c$export$d6875122194c7b44);\n\nfunction $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {\n    let { id: id , 'aria-label': label , 'aria-labelledby': labelledBy  } = props;\n    // If there is both an aria-label and aria-labelledby,\n    // combine them by pointing to the element itself.\n    id = $bdb11010cef70236$export$f680877a34711e37(id);\n    if (labelledBy && label) {\n        let ids = new Set([\n            ...labelledBy.trim().split(/\\s+/),\n            id\n        ]);\n        labelledBy = [\n            ...ids\n        ].join(' ');\n    } else if (labelledBy) labelledBy = labelledBy.trim().split(/\\s+/).join(' ');\n    // If no labels are provided, use the default\n    if (!label && !labelledBy && defaultLabel) label = defaultLabel;\n    return {\n        id: id,\n        'aria-label': label,\n        'aria-labelledby': labelledBy\n    };\n}\n\n\nvar $df56164dff5785e2$exports = {};\n\n$parcel$export$2($df56164dff5785e2$exports, \"useObjectRef\", () => $df56164dff5785e2$export$4338b53315abf666);\n\n\nfunction $df56164dff5785e2$export$4338b53315abf666(forwardedRef) {\n    const objRef = React.useRef();\n    /**\n   * We're using `useLayoutEffect` here instead of `useEffect` because we want\n   * to make sure that the `ref` value is up to date before other places in the\n   * the execution cycle try to read it.\n   */ $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        if (!forwardedRef) return;\n        if (typeof forwardedRef === 'function') forwardedRef(objRef.current);\n        else forwardedRef.current = objRef.current;\n    }, [\n        forwardedRef\n    ]);\n    return objRef;\n}\n\n\nvar $4f58c5f72bcf79f7$exports = {};\n\n$parcel$export$2($4f58c5f72bcf79f7$exports, \"useUpdateEffect\", () => $4f58c5f72bcf79f7$export$496315a1608d9602);\n\nfunction $4f58c5f72bcf79f7$export$496315a1608d9602(effect, dependencies) {\n    const isInitialMount = React.useRef(true);\n    React.useEffect(()=>{\n        if (isInitialMount.current) isInitialMount.current = false;\n        else effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, dependencies);\n}\n\n\n\nvar $9daab02d461809db$exports = {};\n\n$parcel$export$2($9daab02d461809db$exports, \"useResizeObserver\", () => $9daab02d461809db$export$683480f191c0e3ea);\n\nfunction $9daab02d461809db$var$hasResizeObserver() {\n    return typeof window.ResizeObserver !== 'undefined';\n}\nfunction $9daab02d461809db$export$683480f191c0e3ea(options) {\n    const { ref: ref , onResize: onResize  } = options;\n    React.useEffect(()=>{\n        let element = ref === null || ref === void 0 ? void 0 : ref.current;\n        if (!element) return;\n        if (!$9daab02d461809db$var$hasResizeObserver()) {\n            window.addEventListener('resize', onResize, false);\n            return ()=>{\n                window.removeEventListener('resize', onResize, false);\n            };\n        } else {\n            const resizeObserverInstance = new window.ResizeObserver((entries)=>{\n                if (!entries.length) return;\n                onResize();\n            });\n            resizeObserverInstance.observe(element);\n            return ()=>{\n                if (element) resizeObserverInstance.unobserve(element);\n            };\n        }\n    }, [\n        onResize,\n        ref\n    ]);\n}\n\n\nvar $e7801be82b4b2a53$exports = {};\n\n$parcel$export$2($e7801be82b4b2a53$exports, \"useSyncRef\", () => $e7801be82b4b2a53$export$4debdb1a3f0fa79e);\n\nfunction $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        if (context && context.ref && ref) {\n            context.ref.current = ref.current;\n            return ()=>{\n                context.ref.current = null;\n            };\n        }\n    }, [\n        context,\n        ref\n    ]);\n}\n\n\nvar $62d8ded9296f3872$exports = {};\n\n$parcel$export$2($62d8ded9296f3872$exports, \"getScrollParent\", () => $62d8ded9296f3872$export$cfa2225e87938781);\nfunction $62d8ded9296f3872$export$cfa2225e87938781(node) {\n    while(node && !$62d8ded9296f3872$var$isScrollable(node))node = node.parentElement;\n    return node || document.scrollingElement || document.documentElement;\n}\nfunction $62d8ded9296f3872$var$isScrollable(node) {\n    let style = window.getComputedStyle(node);\n    return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);\n}\n\n\nvar $5df64b3807dc15ee$exports = {};\n\n$parcel$export$2($5df64b3807dc15ee$exports, \"useViewportSize\", () => $5df64b3807dc15ee$export$d699905dd57c73ca);\n\n// @ts-ignore\nlet $5df64b3807dc15ee$var$visualViewport = typeof window !== 'undefined' && window.visualViewport;\nfunction $5df64b3807dc15ee$export$d699905dd57c73ca() {\n    let [size1, setSize] = React.useState(()=>$5df64b3807dc15ee$var$getViewportSize()\n    );\n    React.useEffect(()=>{\n        // Use visualViewport api to track available height even on iOS virtual keyboard opening\n        let onResize = ()=>{\n            setSize((size)=>{\n                let newSize = $5df64b3807dc15ee$var$getViewportSize();\n                if (newSize.width === size.width && newSize.height === size.height) return size;\n                return newSize;\n            });\n        };\n        if (!$5df64b3807dc15ee$var$visualViewport) window.addEventListener('resize', onResize);\n        else $5df64b3807dc15ee$var$visualViewport.addEventListener('resize', onResize);\n        return ()=>{\n            if (!$5df64b3807dc15ee$var$visualViewport) window.removeEventListener('resize', onResize);\n            else $5df64b3807dc15ee$var$visualViewport.removeEventListener('resize', onResize);\n        };\n    }, []);\n    return size1;\n}\nfunction $5df64b3807dc15ee$var$getViewportSize() {\n    return {\n        width: ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.width) || window.innerWidth,\n        height: ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.height) || window.innerHeight\n    };\n}\n\n\nvar $ef06256079686ba0$exports = {};\n\n$parcel$export$2($ef06256079686ba0$exports, \"useDescription\", () => $ef06256079686ba0$export$f8aeda7b10753fa1);\n\n\nlet $ef06256079686ba0$var$descriptionId = 0;\nconst $ef06256079686ba0$var$descriptionNodes = new Map();\nfunction $ef06256079686ba0$export$f8aeda7b10753fa1(description) {\n    let [id1, setId] = React.useState(null);\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        if (!description) return;\n        let desc = $ef06256079686ba0$var$descriptionNodes.get(description);\n        if (!desc) {\n            let id = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;\n            setId(id);\n            let node = document.createElement('div');\n            node.id = id;\n            node.style.display = 'none';\n            node.textContent = description;\n            document.body.appendChild(node);\n            desc = {\n                refCount: 0,\n                element: node\n            };\n            $ef06256079686ba0$var$descriptionNodes.set(description, desc);\n        } else setId(desc.element.id);\n        desc.refCount++;\n        return ()=>{\n            if (--desc.refCount === 0) {\n                desc.element.remove();\n                $ef06256079686ba0$var$descriptionNodes.delete(description);\n            }\n        };\n    }, [\n        description\n    ]);\n    return {\n        'aria-describedby': description ? id1 : undefined\n    };\n}\n\n\nvar $c87311424ea30a05$exports = {};\n\n$parcel$export$2($c87311424ea30a05$exports, \"isMac\", () => $c87311424ea30a05$export$9ac100e40613ea10);\n$parcel$export$2($c87311424ea30a05$exports, \"isIPhone\", () => $c87311424ea30a05$export$186c6964ca17d99);\n$parcel$export$2($c87311424ea30a05$exports, \"isIPad\", () => $c87311424ea30a05$export$7bef049ce92e4224);\n$parcel$export$2($c87311424ea30a05$exports, \"isIOS\", () => $c87311424ea30a05$export$fedb369cb70207f1);\n$parcel$export$2($c87311424ea30a05$exports, \"isAppleDevice\", () => $c87311424ea30a05$export$e1865c3bedcd822b);\n$parcel$export$2($c87311424ea30a05$exports, \"isWebKit\", () => $c87311424ea30a05$export$78551043582a6a98);\n$parcel$export$2($c87311424ea30a05$exports, \"isChrome\", () => $c87311424ea30a05$export$6446a186d09e379e);\n$parcel$export$2($c87311424ea30a05$exports, \"isAndroid\", () => $c87311424ea30a05$export$a11b0059900ceec8);\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $c87311424ea30a05$var$testUserAgent(re) {\n    var ref;\n    if (typeof window === 'undefined' || window.navigator == null) return false;\n    return ((ref = window.navigator['userAgentData']) === null || ref === void 0 ? void 0 : ref.brands.some((brand)=>re.test(brand.brand)\n    )) || re.test(window.navigator.userAgent);\n}\nfunction $c87311424ea30a05$var$testPlatform(re) {\n    return typeof window !== 'undefined' && window.navigator != null ? re.test((window.navigator['userAgentData'] || window.navigator).platform) : false;\n}\nfunction $c87311424ea30a05$export$9ac100e40613ea10() {\n    return $c87311424ea30a05$var$testPlatform(/^Mac/i);\n}\nfunction $c87311424ea30a05$export$186c6964ca17d99() {\n    return $c87311424ea30a05$var$testPlatform(/^iPhone/i);\n}\nfunction $c87311424ea30a05$export$7bef049ce92e4224() {\n    return $c87311424ea30a05$var$testPlatform(/^iPad/i) || $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;\n}\nfunction $c87311424ea30a05$export$fedb369cb70207f1() {\n    return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();\n}\nfunction $c87311424ea30a05$export$e1865c3bedcd822b() {\n    return $c87311424ea30a05$export$9ac100e40613ea10() || $c87311424ea30a05$export$fedb369cb70207f1();\n}\nfunction $c87311424ea30a05$export$78551043582a6a98() {\n    return $c87311424ea30a05$var$testUserAgent(/AppleWebKit/i) && !$c87311424ea30a05$export$6446a186d09e379e();\n}\nfunction $c87311424ea30a05$export$6446a186d09e379e() {\n    return $c87311424ea30a05$var$testUserAgent(/Chrome/i);\n}\nfunction $c87311424ea30a05$export$a11b0059900ceec8() {\n    return $c87311424ea30a05$var$testUserAgent(/Android/i);\n}\n\n\nvar $e9faafb641e167db$exports = {};\n\n$parcel$export$2($e9faafb641e167db$exports, \"useEvent\", () => $e9faafb641e167db$export$90fc3a17d93f704c);\n\nfunction $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler1, options) {\n    let handlerRef = React.useRef(handler1);\n    handlerRef.current = handler1;\n    let isDisabled = handler1 == null;\n    React.useEffect(()=>{\n        if (isDisabled) return;\n        let element = ref.current;\n        let handler = (e)=>handlerRef.current.call(this, e)\n        ;\n        element.addEventListener(event, handler, options);\n        return ()=>{\n            element.removeEventListener(event, handler, options);\n        };\n    }, [\n        ref,\n        event,\n        options,\n        isDisabled\n    ]);\n}\n\n\nvar $1dbecbe27a04f9af$exports = {};\n\n$parcel$export$2($1dbecbe27a04f9af$exports, \"useValueEffect\", () => $1dbecbe27a04f9af$export$14d238f342723f25);\n\n\nfunction $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue) {\n    let [value, setValue] = React.useState(defaultValue);\n    let valueRef = React.useRef(value);\n    let effect = React.useRef(null);\n    valueRef.current = value;\n    // Store the function in a ref so we can always access the current version\n    // which has the proper `value` in scope.\n    let nextRef = React.useRef(null);\n    nextRef.current = ()=>{\n        // Run the generator to the next yield.\n        let newValue = effect.current.next();\n        // If the generator is done, reset the effect.\n        if (newValue.done) {\n            effect.current = null;\n            return;\n        }\n        // If the value is the same as the current value,\n        // then continue to the next yield. Otherwise,\n        // set the value in state and wait for the next layout effect.\n        if (value === newValue.value) nextRef.current();\n        else setValue(newValue.value);\n    };\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        // If there is an effect currently running, continue to the next yield.\n        if (effect.current) nextRef.current();\n    });\n    let queue = React.useCallback((fn)=>{\n        effect.current = fn(valueRef.current);\n        nextRef.current();\n    }, [\n        effect,\n        nextRef\n    ]);\n    return [\n        value,\n        queue\n    ];\n}\n\n\nvar $2f04cbc44ee30ce0$exports = {};\n\n$parcel$export$2($2f04cbc44ee30ce0$exports, \"scrollIntoView\", () => $2f04cbc44ee30ce0$export$53a0910f038337bd);\nfunction $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {\n    let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, 'left');\n    let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, 'top');\n    let width = element.offsetWidth;\n    let height = element.offsetHeight;\n    let x = scrollView.scrollLeft;\n    let y = scrollView.scrollTop;\n    let maxX = x + scrollView.offsetWidth;\n    let maxY = y + scrollView.offsetHeight;\n    if (offsetX <= x) x = offsetX;\n    else if (offsetX + width > maxX) x += offsetX + width - maxX;\n    if (offsetY <= y) y = offsetY;\n    else if (offsetY + height > maxY) y += offsetY + height - maxY;\n    scrollView.scrollLeft = x;\n    scrollView.scrollTop = y;\n}\n/**\n * Computes the offset left or top from child to ancestor by accumulating\n * offsetLeft or offsetTop through intervening offsetParents.\n */ function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {\n    const prop = axis === 'left' ? 'offsetLeft' : 'offsetTop';\n    let sum = 0;\n    while(child.offsetParent){\n        sum += child[prop];\n        if (child.offsetParent === ancestor) break;\n        else if (child.offsetParent.contains(ancestor)) {\n            // If the ancestor is not `position:relative`, then we stop at\n            // _its_ offset parent, and we subtract off _its_ offset, so that\n            // we end up with the proper offset from child to ancestor.\n            sum -= ancestor[prop];\n            break;\n        }\n        child = child.offsetParent;\n    }\n    return sum;\n}\n\nfunction $parcel$export$1(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $3b117e43dc0ca95d$exports = {};\n\n$parcel$export$1($3b117e43dc0ca95d$exports, \"Pressable\", () => $3b117e43dc0ca95d$export$27c701ed9e449e99);\n\nvar $f6c31cce2adf654f$exports = {};\n\n$parcel$export$1($f6c31cce2adf654f$exports, \"usePress\", () => $f6c31cce2adf654f$export$45712eceda6fad21);\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet $14c0b72509d70225$var$state = 'default';\nlet $14c0b72509d70225$var$savedUserSelect = '';\nlet $14c0b72509d70225$var$modifiedElementMap = new WeakMap();\nfunction $14c0b72509d70225$export$16a4697467175487(target) {\n    if ($c87311424ea30a05$export$fedb369cb70207f1()) {\n        if ($14c0b72509d70225$var$state === 'default') {\n            $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;\n            document.documentElement.style.webkitUserSelect = 'none';\n        }\n        $14c0b72509d70225$var$state = 'disabled';\n    } else if (target) {\n        // If not iOS, store the target's original user-select and change to user-select: none\n        // Ignore state since it doesn't apply for non iOS\n        $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);\n        target.style.userSelect = 'none';\n    }\n}\nfunction $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {\n    if ($c87311424ea30a05$export$fedb369cb70207f1()) {\n        // If the state is already default, there's nothing to do.\n        // If it is restoring, then there's no need to queue a second restore.\n        if ($14c0b72509d70225$var$state !== 'disabled') return;\n        $14c0b72509d70225$var$state = 'restoring';\n        // There appears to be a delay on iOS where selection still might occur\n        // after pointer up, so wait a bit before removing user-select.\n        setTimeout(()=>{\n            // Wait for any CSS transitions to complete so we don't recompute style\n            // for the whole page in the middle of the animation and cause jank.\n            $bbed8b41f857bcc0$export$24490316f764c430(()=>{\n                // Avoid race conditions\n                if ($14c0b72509d70225$var$state === 'restoring') {\n                    if (document.documentElement.style.webkitUserSelect === 'none') document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || '';\n                    $14c0b72509d70225$var$savedUserSelect = '';\n                    $14c0b72509d70225$var$state = 'default';\n                }\n            });\n        }, 300);\n    } else // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {\n        let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);\n        if (target.style.userSelect === 'none') target.style.userSelect = targetOldUserSelect;\n        if (target.getAttribute('style') === '') target.removeAttribute('style');\n        $14c0b72509d70225$var$modifiedElementMap.delete(target);\n    }\n}\n\n\n\n\n\n\nfunction $8a9cb279dc87e130$export$60278871457622de(event) {\n    // JAWS/NVDA with Firefox.\n    if (event.mozInputSource === 0 && event.isTrusted) return true;\n    return event.detail === 0 && !event.pointerType;\n}\nclass $8a9cb279dc87e130$export$905e7fc544a71f36 {\n    isDefaultPrevented() {\n        return this.nativeEvent.defaultPrevented;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n        this.nativeEvent.preventDefault();\n    }\n    stopPropagation() {\n        this.nativeEvent.stopPropagation();\n        this.isPropagationStopped = ()=>true\n        ;\n    }\n    isPropagationStopped() {\n        return false;\n    }\n    persist() {\n    }\n    constructor(type, nativeEvent){\n        this.nativeEvent = nativeEvent;\n        this.target = nativeEvent.target;\n        this.currentTarget = nativeEvent.currentTarget;\n        this.relatedTarget = nativeEvent.relatedTarget;\n        this.bubbles = nativeEvent.bubbles;\n        this.cancelable = nativeEvent.cancelable;\n        this.defaultPrevented = nativeEvent.defaultPrevented;\n        this.eventPhase = nativeEvent.eventPhase;\n        this.isTrusted = nativeEvent.isTrusted;\n        this.timeStamp = nativeEvent.timeStamp;\n        this.type = type;\n    }\n}\nfunction $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {\n    let stateRef = React.useRef({\n        isFocused: false,\n        onBlur: onBlur,\n        observer: null\n    });\n    let state1 = stateRef.current;\n    state1.onBlur = onBlur;\n    // Clean up MutationObserver on unmount. See below.\n    // eslint-disable-next-line arrow-body-style\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        return ()=>{\n            if (state1.observer) {\n                state1.observer.disconnect();\n                state1.observer = null;\n            }\n        };\n    }, [\n        state1\n    ]);\n    // This function is called during a React onFocus event.\n    return (e1)=>{\n        // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n        // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n        // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n        // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n        if (e1.target instanceof HTMLButtonElement || e1.target instanceof HTMLInputElement || e1.target instanceof HTMLTextAreaElement || e1.target instanceof HTMLSelectElement) {\n            state1.isFocused = true;\n            let target = e1.target;\n            let onBlurHandler = (e)=>{\n                var // For backward compatibility, dispatch a (fake) React synthetic event.\n                ref;\n                let state = stateRef.current;\n                state.isFocused = false;\n                if (target.disabled) (ref = state.onBlur) === null || ref === void 0 ? void 0 : ref.call(state, new $8a9cb279dc87e130$export$905e7fc544a71f36('blur', e));\n                // We no longer need the MutationObserver once the target is blurred.\n                if (state.observer) {\n                    state.observer.disconnect();\n                    state.observer = null;\n                }\n            };\n            target.addEventListener('focusout', onBlurHandler, {\n                once: true\n            });\n            state1.observer = new MutationObserver(()=>{\n                if (state1.isFocused && target.disabled) {\n                    state1.observer.disconnect();\n                    target.dispatchEvent(new FocusEvent('blur'));\n                    target.dispatchEvent(new FocusEvent('focusout', {\n                        bubbles: true\n                    }));\n                }\n            });\n            state1.observer.observe(target, {\n                attributes: true,\n                attributeFilter: [\n                    'disabled'\n                ]\n            });\n        }\n    };\n}\n\n\n\nconst $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = React__default[\"default\"].createContext(null);\n$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = 'PressResponderContext';\n\n\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n    // Consume context from <PressResponder> and merge with props.\n    let context = React.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);\n    if (context) {\n        let { register: register , ...contextProps } = context;\n        props = $3ef42575df84b30b$export$9d1611c77c2fe928(contextProps, props);\n        register();\n    }\n    $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, props.ref);\n    return props;\n}\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n    let { onPress: onPress1 , onPressChange: onPressChange1 , onPressStart: onPressStart1 , onPressEnd: onPressEnd1 , onPressUp: onPressUp1 , isDisabled: isDisabled1 , isPressed: isPressedProp , preventFocusOnPress: preventFocusOnPress , shouldCancelOnPointerExit: shouldCancelOnPointerExit , allowTextSelectionOnPress: allowTextSelectionOnPress , // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _ , ...domProps } = $f6c31cce2adf654f$var$usePressResponderContext(props);\n    let propsRef = React.useRef(null);\n    propsRef.current = {\n        onPress: onPress1,\n        onPressChange: onPressChange1,\n        onPressStart: onPressStart1,\n        onPressEnd: onPressEnd1,\n        onPressUp: onPressUp1,\n        isDisabled: isDisabled1,\n        shouldCancelOnPointerExit: shouldCancelOnPointerExit\n    };\n    let [isPressed, setPressed] = React.useState(false);\n    let ref = React.useRef({\n        isPressed: false,\n        ignoreEmulatedMouseEvents: false,\n        ignoreClickAfterPress: false,\n        didFirePressStart: false,\n        activePointerId: null,\n        target: null,\n        isOverTarget: false,\n        pointerType: null\n    });\n    let { addGlobalListener: addGlobalListener , removeAllGlobalListeners: removeAllGlobalListeners  } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();\n    let pressProps1 = React.useMemo(()=>{\n        let state = ref.current;\n        let triggerPressStart = (originalEvent, pointerType)=>{\n            let { onPressStart: onPressStart , onPressChange: onPressChange , isDisabled: isDisabled  } = propsRef.current;\n            if (isDisabled || state.didFirePressStart) return;\n            if (onPressStart) onPressStart({\n                type: 'pressstart',\n                pointerType: pointerType,\n                target: originalEvent.currentTarget,\n                shiftKey: originalEvent.shiftKey,\n                metaKey: originalEvent.metaKey,\n                ctrlKey: originalEvent.ctrlKey,\n                altKey: originalEvent.altKey\n            });\n            if (onPressChange) onPressChange(true);\n            state.didFirePressStart = true;\n            setPressed(true);\n        };\n        let triggerPressEnd = (originalEvent, pointerType, wasPressed = true)=>{\n            let { onPressEnd: onPressEnd , onPressChange: onPressChange , onPress: onPress , isDisabled: isDisabled  } = propsRef.current;\n            if (!state.didFirePressStart) return;\n            state.ignoreClickAfterPress = true;\n            state.didFirePressStart = false;\n            if (onPressEnd) onPressEnd({\n                type: 'pressend',\n                pointerType: pointerType,\n                target: originalEvent.currentTarget,\n                shiftKey: originalEvent.shiftKey,\n                metaKey: originalEvent.metaKey,\n                ctrlKey: originalEvent.ctrlKey,\n                altKey: originalEvent.altKey\n            });\n            if (onPressChange) onPressChange(false);\n            setPressed(false);\n            if (onPress && wasPressed && !isDisabled) onPress({\n                type: 'press',\n                pointerType: pointerType,\n                target: originalEvent.currentTarget,\n                shiftKey: originalEvent.shiftKey,\n                metaKey: originalEvent.metaKey,\n                ctrlKey: originalEvent.ctrlKey,\n                altKey: originalEvent.altKey\n            });\n        };\n        let triggerPressUp = (originalEvent, pointerType)=>{\n            let { onPressUp: onPressUp , isDisabled: isDisabled  } = propsRef.current;\n            if (isDisabled) return;\n            if (onPressUp) onPressUp({\n                type: 'pressup',\n                pointerType: pointerType,\n                target: originalEvent.currentTarget,\n                shiftKey: originalEvent.shiftKey,\n                metaKey: originalEvent.metaKey,\n                ctrlKey: originalEvent.ctrlKey,\n                altKey: originalEvent.altKey\n            });\n        };\n        let cancel = (e)=>{\n            if (state.isPressed) {\n                if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n                state.isPressed = false;\n                state.isOverTarget = false;\n                state.activePointerId = null;\n                state.pointerType = null;\n                removeAllGlobalListeners();\n                if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n            }\n        };\n        let pressProps = {\n            onKeyDown (e) {\n                if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent) && e.currentTarget.contains(e.target)) {\n                    if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target)) e.preventDefault();\n                    e.stopPropagation();\n                    // If the event is repeating, it may have started on a different element\n                    // after which focus moved to the current element. Ignore these events and\n                    // only handle the first key down event.\n                    if (!state.isPressed && !e.repeat) {\n                        state.target = e.currentTarget;\n                        state.isPressed = true;\n                        triggerPressStart(e, 'keyboard');\n                        // Focus may move before the key up event, so register the event on the document\n                        // instead of the same element where the key down event occurred.\n                        addGlobalListener(document, 'keyup', onKeyUp, false);\n                    }\n                }\n            },\n            onKeyUp (e) {\n                if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent) && !e.repeat && e.currentTarget.contains(e.target)) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), 'keyboard');\n            },\n            onClick (e) {\n                if (e && !e.currentTarget.contains(e.target)) return;\n                if (e && e.button === 0) {\n                    e.stopPropagation();\n                    if (isDisabled1) e.preventDefault();\n                    // If triggered from a screen reader or by using element.click(),\n                    // trigger as if it were a keyboard click.\n                    if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === 'virtual' || $8a9cb279dc87e130$export$60278871457622de(e.nativeEvent))) {\n                        // Ensure the element receives focus (VoiceOver on iOS does not do this)\n                        if (!isDisabled1 && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);\n                        triggerPressStart(e, 'virtual');\n                        triggerPressUp(e, 'virtual');\n                        triggerPressEnd(e, 'virtual');\n                    }\n                    state.ignoreEmulatedMouseEvents = false;\n                    state.ignoreClickAfterPress = false;\n                }\n            }\n        };\n        let onKeyUp = (e)=>{\n            if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e)) {\n                if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target)) e.preventDefault();\n                e.stopPropagation();\n                state.isPressed = false;\n                let target = e.target;\n                triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), 'keyboard', state.target.contains(target));\n                removeAllGlobalListeners();\n                // If the target is a link, trigger the click method to open the URL,\n                // but defer triggering pressEnd until onClick event handler.\n                if (state.target.contains(target) && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') state.target.click();\n            }\n        };\n        if (typeof PointerEvent !== 'undefined') {\n            pressProps.onPointerDown = (e)=>{\n                // Only handle left clicks, and ignore events that bubbled through portals.\n                if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n                // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n                // Ignore and let the onClick handler take care of it instead.\n                // https://bugs.webkit.org/show_bug.cgi?id=222627\n                // https://bugs.webkit.org/show_bug.cgi?id=223202\n                if ($f6c31cce2adf654f$var$isVirtualPointerEvent(e.nativeEvent)) {\n                    state.pointerType = 'virtual';\n                    return;\n                }\n                // Due to browser inconsistencies, especially on mobile browsers, we prevent\n                // default on pointer down and handle focusing the pressable element ourselves.\n                if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n                state.pointerType = e.pointerType;\n                e.stopPropagation();\n                if (!state.isPressed) {\n                    state.isPressed = true;\n                    state.isOverTarget = true;\n                    state.activePointerId = e.pointerId;\n                    state.target = e.currentTarget;\n                    if (!isDisabled1 && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);\n                    if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);\n                    triggerPressStart(e, state.pointerType);\n                    addGlobalListener(document, 'pointermove', onPointerMove, false);\n                    addGlobalListener(document, 'pointerup', onPointerUp, false);\n                    addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n                }\n            };\n            pressProps.onMouseDown = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                if (e.button === 0) {\n                    // Chrome and Firefox on touch Windows devices require mouse down events\n                    // to be canceled in addition to pointer events, or an extra asynchronous\n                    // focus event will be fired.\n                    if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n                    e.stopPropagation();\n                }\n            };\n            pressProps.onPointerUp = (e)=>{\n                // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n                if (!e.currentTarget.contains(e.target) || state.pointerType === 'virtual') return;\n                // Only handle left clicks\n                // Safari on iOS sometimes fires pointerup events, even\n                // when the touch isn't over the target, so double check.\n                if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n            };\n            // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n            // Use pointer move events instead to implement our own hit testing.\n            // See https://bugs.webkit.org/show_bug.cgi?id=199803\n            let onPointerMove = (e)=>{\n                if (e.pointerId !== state.activePointerId) return;\n                if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n                    if (!state.isOverTarget) {\n                        state.isOverTarget = true;\n                        triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n                    }\n                } else if (state.isOverTarget) {\n                    state.isOverTarget = false;\n                    triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n                    if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n                }\n            };\n            let onPointerUp = (e)=>{\n                if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n                    if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n                    else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n                    state.isPressed = false;\n                    state.isOverTarget = false;\n                    state.activePointerId = null;\n                    state.pointerType = null;\n                    removeAllGlobalListeners();\n                    if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n                }\n            };\n            let onPointerCancel = (e)=>{\n                cancel(e);\n            };\n            pressProps.onDragStart = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n                cancel(e);\n            };\n        } else {\n            pressProps.onMouseDown = (e)=>{\n                // Only handle left clicks\n                if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n                // Due to browser inconsistencies, especially on mobile browsers, we prevent\n                // default on mouse down and handle focusing the pressable element ourselves.\n                if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n                e.stopPropagation();\n                if (state.ignoreEmulatedMouseEvents) return;\n                state.isPressed = true;\n                state.isOverTarget = true;\n                state.target = e.currentTarget;\n                state.pointerType = $8a9cb279dc87e130$export$60278871457622de(e.nativeEvent) ? 'virtual' : 'mouse';\n                if (!isDisabled1 && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);\n                triggerPressStart(e, state.pointerType);\n                addGlobalListener(document, 'mouseup', onMouseUp, false);\n            };\n            pressProps.onMouseEnter = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                e.stopPropagation();\n                if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n                    state.isOverTarget = true;\n                    triggerPressStart(e, state.pointerType);\n                }\n            };\n            pressProps.onMouseLeave = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                e.stopPropagation();\n                if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n                    state.isOverTarget = false;\n                    triggerPressEnd(e, state.pointerType, false);\n                    if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n                }\n            };\n            pressProps.onMouseUp = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType);\n            };\n            let onMouseUp = (e)=>{\n                // Only handle left clicks\n                if (e.button !== 0) return;\n                state.isPressed = false;\n                removeAllGlobalListeners();\n                if (state.ignoreEmulatedMouseEvents) {\n                    state.ignoreEmulatedMouseEvents = false;\n                    return;\n                }\n                if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n                else if (state.isOverTarget) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n                state.isOverTarget = false;\n            };\n            pressProps.onTouchStart = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                e.stopPropagation();\n                let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n                if (!touch) return;\n                state.activePointerId = touch.identifier;\n                state.ignoreEmulatedMouseEvents = true;\n                state.isOverTarget = true;\n                state.isPressed = true;\n                state.target = e.currentTarget;\n                state.pointerType = 'touch';\n                // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n                // on the emulated mouse event and handle focusing the pressable element ourselves.\n                if (!isDisabled1 && !preventFocusOnPress) $7215afc6de606d6b$export$de79e2c695e052f3(e.currentTarget);\n                if (!allowTextSelectionOnPress) $14c0b72509d70225$export$16a4697467175487(state.target);\n                triggerPressStart(e, state.pointerType);\n                addGlobalListener(window, 'scroll', onScroll, true);\n            };\n            pressProps.onTouchMove = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                e.stopPropagation();\n                if (!state.isPressed) return;\n                let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n                if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n                    if (!state.isOverTarget) {\n                        state.isOverTarget = true;\n                        triggerPressStart(e, state.pointerType);\n                    }\n                } else if (state.isOverTarget) {\n                    state.isOverTarget = false;\n                    triggerPressEnd(e, state.pointerType, false);\n                    if (propsRef.current.shouldCancelOnPointerExit) cancel(e);\n                }\n            };\n            pressProps.onTouchEnd = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                e.stopPropagation();\n                if (!state.isPressed) return;\n                let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n                if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n                    triggerPressUp(e, state.pointerType);\n                    triggerPressEnd(e, state.pointerType);\n                } else if (state.isOverTarget) triggerPressEnd(e, state.pointerType, false);\n                state.isPressed = false;\n                state.activePointerId = null;\n                state.isOverTarget = false;\n                state.ignoreEmulatedMouseEvents = true;\n                if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(state.target);\n                removeAllGlobalListeners();\n            };\n            pressProps.onTouchCancel = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                e.stopPropagation();\n                if (state.isPressed) cancel(e);\n            };\n            let onScroll = (e)=>{\n                if (state.isPressed && e.target.contains(state.target)) cancel({\n                    currentTarget: state.target,\n                    shiftKey: false,\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                });\n            };\n            pressProps.onDragStart = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                cancel(e);\n            };\n        }\n        return pressProps;\n    }, [\n        addGlobalListener,\n        isDisabled1,\n        preventFocusOnPress,\n        removeAllGlobalListeners,\n        allowTextSelectionOnPress\n    ]);\n    // Remove user-select: none in case component unmounts immediately after pressStart\n    // eslint-disable-next-line arrow-body-style\n    React.useEffect(()=>{\n        return ()=>{\n            if (!allowTextSelectionOnPress) $14c0b72509d70225$export$b0d6fa1ab32e3295(ref.current.target);\n        };\n    }, [\n        allowTextSelectionOnPress\n    ]);\n    return {\n        isPressed: isPressedProp || isPressed,\n        pressProps: $3ef42575df84b30b$export$9d1611c77c2fe928(domProps, pressProps1)\n    };\n}\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n    return target.tagName === 'A' && target.hasAttribute('href');\n}\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event) {\n    const { key: key , code: code , target: target  } = event;\n    const element = target;\n    const { tagName: tagName , isContentEditable: isContentEditable  } = element;\n    const role = element.getAttribute('role');\n    // Accessibility for keyboards. Space and Enter only.\n    // \"Spacebar\" is for IE 11\n    return (key === 'Enter' || key === ' ' || key === 'Spacebar' || code === 'Space') && tagName !== 'INPUT' && tagName !== 'TEXTAREA' && isContentEditable !== true && (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === 'button' && key !== 'Enter') && // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter');\n}\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n    const { targetTouches: targetTouches  } = event;\n    if (targetTouches.length > 0) return targetTouches[0];\n    return null;\n}\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n    const changedTouches = event.changedTouches;\n    for(let i = 0; i < changedTouches.length; i++){\n        const touch = changedTouches[i];\n        if (touch.identifier === pointerId) return touch;\n    }\n    return null;\n}\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n    return {\n        currentTarget: target,\n        shiftKey: e.shiftKey,\n        ctrlKey: e.ctrlKey,\n        metaKey: e.metaKey,\n        altKey: e.altKey\n    };\n}\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n    let offsetX = point.width / 2 || point.radiusX || 0;\n    let offsetY = point.height / 2 || point.radiusY || 0;\n    return {\n        top: point.clientY - offsetY,\n        right: point.clientX + offsetX,\n        bottom: point.clientY + offsetY,\n        left: point.clientX - offsetX\n    };\n}\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n    // check if they cannot overlap on x axis\n    if (a.left > b.right || b.left > a.right) return false;\n    // check if they cannot overlap on y axis\n    if (a.top > b.bottom || b.top > a.bottom) return false;\n    return true;\n}\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n    let rect = target.getBoundingClientRect();\n    let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n    return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n    // We cannot prevent default if the target is a draggable element.\n    return !target.draggable;\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target) {\n    return !((target.tagName === 'INPUT' || target.tagName === 'BUTTON') && target.type === 'submit');\n}\nfunction $f6c31cce2adf654f$var$isVirtualPointerEvent(event) {\n    // If the pointer size is zero, then we assume it's from a screen reader.\n    // Android TalkBack double tap will sometimes return a event with width and height of 1\n    // and pointerType === 'mouse' so we need to check for a specific combination of event attributes.\n    // Cannot use \"event.pressure === 0\" as the sole check due to Safari pointer events always returning pressure === 0\n    // instead of .5, see https://bugs.webkit.org/show_bug.cgi?id=206216\n    return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0;\n}\n\n\n\nconst $3b117e43dc0ca95d$export$27c701ed9e449e99 = /*#__PURE__*/ React__default[\"default\"].forwardRef(({ children: children , ...props }, ref)=>{\n    let newRef = React.useRef();\n    ref = ref !== null && ref !== void 0 ? ref : newRef;\n    let { pressProps: pressProps  } = $f6c31cce2adf654f$export$45712eceda6fad21({\n        ...props,\n        ref: ref\n    });\n    let child = React__default[\"default\"].Children.only(children);\n    return(/*#__PURE__*/ React__default[\"default\"].cloneElement(child, // @ts-ignore\n    {\n        ref: ref,\n        ...$3ef42575df84b30b$export$9d1611c77c2fe928(child.props, pressProps)\n    }));\n});\n\n\nvar $f1ab8c75478c6f73$exports = {};\n\n$parcel$export$1($f1ab8c75478c6f73$exports, \"PressResponder\", () => $f1ab8c75478c6f73$export$3351871ee4b288b8);\n\n\n\nconst $f1ab8c75478c6f73$export$3351871ee4b288b8 = /*#__PURE__*/ React__default[\"default\"].forwardRef(({ children: children , ...props }, ref)=>{\n    let isRegistered = React.useRef(false);\n    let prevContext = React.useContext($ae1eeba8b9eafd08$export$5165eccb35aaadb5);\n    let context = $3ef42575df84b30b$export$9d1611c77c2fe928(prevContext || {\n    }, {\n        ...props,\n        ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),\n        register () {\n            isRegistered.current = true;\n            if (prevContext) prevContext.register();\n        }\n    });\n    $e7801be82b4b2a53$export$4debdb1a3f0fa79e(prevContext, ref);\n    React.useEffect(()=>{\n        if (!isRegistered.current) console.warn(\"A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.\");\n    }, []);\n    return(/*#__PURE__*/ React__default[\"default\"].createElement($ae1eeba8b9eafd08$export$5165eccb35aaadb5.Provider, {\n        value: context\n    }, children));\n});\n\n\nvar $a1ea59d68270f0dd$exports = {};\n\n$parcel$export$1($a1ea59d68270f0dd$exports, \"useFocus\", () => $a1ea59d68270f0dd$export$f8168d8dd8fd66e6);\n\nfunction $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {\n    let onBlur;\n    if (!props.isDisabled && (props.onBlur || props.onFocusChange)) onBlur = (e)=>{\n        if (e.target === e.currentTarget) {\n            if (props.onBlur) props.onBlur(e);\n            if (props.onFocusChange) props.onFocusChange(false);\n            return true;\n        }\n    };\n    else onBlur = null;\n    let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);\n    let onFocus;\n    if (!props.isDisabled && (props.onFocus || props.onFocusChange || props.onBlur)) onFocus = (e)=>{\n        if (e.target === e.currentTarget) {\n            if (props.onFocus) props.onFocus(e);\n            if (props.onFocusChange) props.onFocusChange(true);\n            onSyntheticFocus(e);\n        }\n    };\n    return {\n        focusProps: {\n            onFocus: onFocus,\n            onBlur: onBlur\n        }\n    };\n}\n\n\nvar $507fabe10e71c6fb$exports = {};\n\n$parcel$export$1($507fabe10e71c6fb$exports, \"isFocusVisible\", () => $507fabe10e71c6fb$export$b9b3dfddab17db27);\n$parcel$export$1($507fabe10e71c6fb$exports, \"getInteractionModality\", () => $507fabe10e71c6fb$export$630ff653c5ada6a9);\n$parcel$export$1($507fabe10e71c6fb$exports, \"setInteractionModality\", () => $507fabe10e71c6fb$export$8397ddfc504fdb9a);\n$parcel$export$1($507fabe10e71c6fb$exports, \"useInteractionModality\", () => $507fabe10e71c6fb$export$98e20ec92f614cfe);\n$parcel$export$1($507fabe10e71c6fb$exports, \"useFocusVisible\", () => $507fabe10e71c6fb$export$ffd9e5021c1fb2d6);\n$parcel$export$1($507fabe10e71c6fb$exports, \"useFocusVisibleListener\", () => $507fabe10e71c6fb$export$ec71b4b83ac08ec3);\n\n\n\nlet $507fabe10e71c6fb$var$currentModality = null;\nlet $507fabe10e71c6fb$var$changeHandlers = new Set();\nlet $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;\nlet $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\nlet $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n// Only Tab or Esc keys will make focus visible on text input elements\nconst $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {\n    Tab: true,\n    Escape: true\n};\nfunction $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {\n    for (let handler of $507fabe10e71c6fb$var$changeHandlers)handler(modality, e);\n}\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */ function $507fabe10e71c6fb$var$isValidKey(e) {\n    // Control and Shift keys trigger when navigating back to the tab with keyboard.\n    return !(e.metaKey || !$c87311424ea30a05$export$9ac100e40613ea10() && e.altKey || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\nfunction $507fabe10e71c6fb$var$handleKeyboardEvent(e) {\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n    if ($507fabe10e71c6fb$var$isValidKey(e)) {\n        $507fabe10e71c6fb$var$currentModality = 'keyboard';\n        $507fabe10e71c6fb$var$triggerChangeHandlers('keyboard', e);\n    }\n}\nfunction $507fabe10e71c6fb$var$handlePointerEvent(e) {\n    $507fabe10e71c6fb$var$currentModality = 'pointer';\n    if (e.type === 'mousedown' || e.type === 'pointerdown') {\n        $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n        $507fabe10e71c6fb$var$triggerChangeHandlers('pointer', e);\n    }\n}\nfunction $507fabe10e71c6fb$var$handleClickEvent(e) {\n    if ($8a9cb279dc87e130$export$60278871457622de(e)) {\n        $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n        $507fabe10e71c6fb$var$currentModality = 'virtual';\n    }\n}\nfunction $507fabe10e71c6fb$var$handleFocusEvent(e) {\n    // Firefox fires two extra focus events when the user first clicks into an iframe:\n    // first on the window, then on the document. We ignore these events so they don't\n    // cause keyboard focus rings to appear.\n    if (e.target === window || e.target === document) return;\n    // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n    // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n    if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {\n        $507fabe10e71c6fb$var$currentModality = 'virtual';\n        $507fabe10e71c6fb$var$triggerChangeHandlers('virtual', e);\n    }\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n    $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;\n}\nfunction $507fabe10e71c6fb$var$handleWindowBlur() {\n    // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n    // for example, since a subsequent focus event won't be fired.\n    $507fabe10e71c6fb$var$hasEventBeforeFocus = false;\n    $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;\n}\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */ function $507fabe10e71c6fb$var$setupGlobalFocusEvents() {\n    if (typeof window === 'undefined' || $507fabe10e71c6fb$var$hasSetupGlobalListeners) return;\n    // Programmatic focus() calls shouldn't affect the current input modality.\n    // However, we need to detect other cases when a focus event occurs without\n    // a preceding user event (e.g. screen reader focus). Overriding the focus\n    // method on HTMLElement.prototype is a bit hacky, but works.\n    let focus = HTMLElement.prototype.focus;\n    HTMLElement.prototype.focus = function() {\n        $507fabe10e71c6fb$var$hasEventBeforeFocus = true;\n        focus.apply(this, arguments);\n    };\n    document.addEventListener('keydown', $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n    document.addEventListener('keyup', $507fabe10e71c6fb$var$handleKeyboardEvent, true);\n    document.addEventListener('click', $507fabe10e71c6fb$var$handleClickEvent, true);\n    // Register focus events on the window so they are sure to happen\n    // before React's event listeners (registered on the document).\n    window.addEventListener('focus', $507fabe10e71c6fb$var$handleFocusEvent, true);\n    window.addEventListener('blur', $507fabe10e71c6fb$var$handleWindowBlur, false);\n    if (typeof PointerEvent !== 'undefined') {\n        document.addEventListener('pointerdown', $507fabe10e71c6fb$var$handlePointerEvent, true);\n        document.addEventListener('pointermove', $507fabe10e71c6fb$var$handlePointerEvent, true);\n        document.addEventListener('pointerup', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    } else {\n        document.addEventListener('mousedown', $507fabe10e71c6fb$var$handlePointerEvent, true);\n        document.addEventListener('mousemove', $507fabe10e71c6fb$var$handlePointerEvent, true);\n        document.addEventListener('mouseup', $507fabe10e71c6fb$var$handlePointerEvent, true);\n    }\n    $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;\n}\nif (typeof document !== 'undefined') {\n    if (document.readyState !== 'loading') $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n    else document.addEventListener('DOMContentLoaded', $507fabe10e71c6fb$var$setupGlobalFocusEvents);\n}\nfunction $507fabe10e71c6fb$export$b9b3dfddab17db27() {\n    return $507fabe10e71c6fb$var$currentModality !== 'pointer';\n}\nfunction $507fabe10e71c6fb$export$630ff653c5ada6a9() {\n    return $507fabe10e71c6fb$var$currentModality;\n}\nfunction $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {\n    $507fabe10e71c6fb$var$currentModality = modality;\n    $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);\n}\nfunction $507fabe10e71c6fb$export$98e20ec92f614cfe() {\n    $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n    let [modality, setModality] = React.useState($507fabe10e71c6fb$var$currentModality);\n    React.useEffect(()=>{\n        let handler = ()=>{\n            setModality($507fabe10e71c6fb$var$currentModality);\n        };\n        $507fabe10e71c6fb$var$changeHandlers.add(handler);\n        return ()=>{\n            $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n        };\n    }, []);\n    return modality;\n}\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */ function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {\n    return !(isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\nfunction $507fabe10e71c6fb$export$ffd9e5021c1fb2d6(props = {\n}) {\n    let { isTextInput: isTextInput , autoFocus: autoFocus  } = props;\n    let [isFocusVisibleState, setFocusVisible] = React.useState(autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27());\n    $507fabe10e71c6fb$export$ec71b4b83ac08ec3(($507fabe10e71c6fb$export$b9b3dfddab17db27)=>{\n        setFocusVisible($507fabe10e71c6fb$export$b9b3dfddab17db27);\n    }, [\n        isTextInput\n    ], {\n        isTextInput: isTextInput\n    });\n    return {\n        isFocusVisible: isFocusVisibleState\n    };\n}\nfunction $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {\n    $507fabe10e71c6fb$var$setupGlobalFocusEvents();\n    React.useEffect(()=>{\n        let handler = (modality, e)=>{\n            if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e)) return;\n            fn($507fabe10e71c6fb$export$b9b3dfddab17db27());\n        };\n        $507fabe10e71c6fb$var$changeHandlers.add(handler);\n        return ()=>{\n            $507fabe10e71c6fb$var$changeHandlers.delete(handler);\n        };\n    }, deps);\n}\n\n\nvar $9ab94262bd0047c7$exports = {};\n\n$parcel$export$1($9ab94262bd0047c7$exports, \"useFocusWithin\", () => $9ab94262bd0047c7$export$420e68273165f4ec);\n\n\nfunction $9ab94262bd0047c7$export$420e68273165f4ec(props) {\n    let state = React.useRef({\n        isFocusWithin: false\n    }).current;\n    let onBlur = props.isDisabled ? null : (e)=>{\n        // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n        // when moving focus inside the element. Only trigger if the currentTarget doesn't\n        // include the relatedTarget (where focus is moving).\n        if (state.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n            state.isFocusWithin = false;\n            if (props.onBlurWithin) props.onBlurWithin(e);\n            if (props.onFocusWithinChange) props.onFocusWithinChange(false);\n        }\n    };\n    let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc(onBlur);\n    let onFocus = props.isDisabled ? null : (e)=>{\n        if (!state.isFocusWithin) {\n            if (props.onFocusWithin) props.onFocusWithin(e);\n            if (props.onFocusWithinChange) props.onFocusWithinChange(true);\n            state.isFocusWithin = true;\n            onSyntheticFocus(e);\n        }\n    };\n    return {\n        focusWithinProps: {\n            onFocus: onFocus,\n            onBlur: onBlur\n        }\n    };\n}\n\n\nvar $6179b936705e76d3$exports = {};\n\n$parcel$export$1($6179b936705e76d3$exports, \"useHover\", () => $6179b936705e76d3$export$ae780daf29e6d456);\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\nlet $6179b936705e76d3$var$hoverCount = 0;\nfunction $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {\n    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;\n    // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n    // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n    // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n    // the distant future because a user previously touched the element.\n    setTimeout(()=>{\n        $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;\n    }, 50);\n}\nfunction $6179b936705e76d3$var$handleGlobalPointerEvent(e) {\n    if (e.pointerType === 'touch') $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();\n}\nfunction $6179b936705e76d3$var$setupGlobalTouchEvents() {\n    if (typeof document === 'undefined') return;\n    if (typeof PointerEvent !== 'undefined') document.addEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);\n    else document.addEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n    $6179b936705e76d3$var$hoverCount++;\n    return ()=>{\n        $6179b936705e76d3$var$hoverCount--;\n        if ($6179b936705e76d3$var$hoverCount > 0) return;\n        if (typeof PointerEvent !== 'undefined') document.removeEventListener('pointerup', $6179b936705e76d3$var$handleGlobalPointerEvent);\n        else document.removeEventListener('touchend', $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);\n    };\n}\nfunction $6179b936705e76d3$export$ae780daf29e6d456(props) {\n    let { onHoverStart: onHoverStart , onHoverChange: onHoverChange , onHoverEnd: onHoverEnd , isDisabled: isDisabled  } = props;\n    let [isHovered, setHovered] = React.useState(false);\n    let state = React.useRef({\n        isHovered: false,\n        ignoreEmulatedMouseEvents: false,\n        pointerType: '',\n        target: null\n    }).current;\n    React.useEffect($6179b936705e76d3$var$setupGlobalTouchEvents, []);\n    let { hoverProps: hoverProps1 , triggerHoverEnd: triggerHoverEnd1  } = React.useMemo(()=>{\n        let triggerHoverStart = (event, pointerType)=>{\n            state.pointerType = pointerType;\n            if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) return;\n            state.isHovered = true;\n            let target = event.currentTarget;\n            state.target = target;\n            if (onHoverStart) onHoverStart({\n                type: 'hoverstart',\n                target: target,\n                pointerType: pointerType\n            });\n            if (onHoverChange) onHoverChange(true);\n            setHovered(true);\n        };\n        let triggerHoverEnd = (event, pointerType)=>{\n            state.pointerType = '';\n            state.target = null;\n            if (pointerType === 'touch' || !state.isHovered) return;\n            state.isHovered = false;\n            let target = event.currentTarget;\n            if (onHoverEnd) onHoverEnd({\n                type: 'hoverend',\n                target: target,\n                pointerType: pointerType\n            });\n            if (onHoverChange) onHoverChange(false);\n            setHovered(false);\n        };\n        let hoverProps = {\n        };\n        if (typeof PointerEvent !== 'undefined') {\n            hoverProps.onPointerEnter = (e)=>{\n                if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') return;\n                triggerHoverStart(e, e.pointerType);\n            };\n            hoverProps.onPointerLeave = (e)=>{\n                if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, e.pointerType);\n            };\n        } else {\n            hoverProps.onTouchStart = ()=>{\n                state.ignoreEmulatedMouseEvents = true;\n            };\n            hoverProps.onMouseEnter = (e)=>{\n                if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents) triggerHoverStart(e, 'mouse');\n                state.ignoreEmulatedMouseEvents = false;\n            };\n            hoverProps.onMouseLeave = (e)=>{\n                if (!isDisabled && e.currentTarget.contains(e.target)) triggerHoverEnd(e, 'mouse');\n            };\n        }\n        return {\n            hoverProps: hoverProps,\n            triggerHoverEnd: triggerHoverEnd\n        };\n    }, [\n        onHoverStart,\n        onHoverChange,\n        onHoverEnd,\n        isDisabled,\n        state\n    ]);\n    React.useEffect(()=>{\n        // Call the triggerHoverEnd as soon as isDisabled changes to true\n        // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n        if (isDisabled) triggerHoverEnd1({\n            currentTarget: state.target\n        }, state.pointerType);\n    }, [\n        isDisabled\n    ]);\n    return {\n        hoverProps: hoverProps1,\n        isHovered: isHovered\n    };\n}\n\n\nvar $e0b6e0b68ec7f50f$exports = {};\n\n$parcel$export$1($e0b6e0b68ec7f50f$exports, \"useInteractOutside\", () => $e0b6e0b68ec7f50f$export$872b660ac5a1ff98);\n\nfunction $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {\n    let { ref: ref , onInteractOutside: onInteractOutside , isDisabled: isDisabled , onInteractOutsideStart: onInteractOutsideStart  } = props;\n    let stateRef = React.useRef({\n        isPointerDown: false,\n        ignoreEmulatedMouseEvents: false,\n        onInteractOutside: onInteractOutside,\n        onInteractOutsideStart: onInteractOutsideStart\n    });\n    let state = stateRef.current;\n    state.onInteractOutside = onInteractOutside;\n    state.onInteractOutsideStart = onInteractOutsideStart;\n    React.useEffect(()=>{\n        if (isDisabled) return;\n        let onPointerDown = (e)=>{\n            if ($e0b6e0b68ec7f50f$var$isValidEvent(e, ref) && state.onInteractOutside) {\n                if (state.onInteractOutsideStart) state.onInteractOutsideStart(e);\n                state.isPointerDown = true;\n            }\n        };\n        // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n        if (typeof PointerEvent !== 'undefined') {\n            let onPointerUp = (e)=>{\n                if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n                    state.isPointerDown = false;\n                    state.onInteractOutside(e);\n                }\n            };\n            // changing these to capture phase fixed combobox\n            document.addEventListener('pointerdown', onPointerDown, true);\n            document.addEventListener('pointerup', onPointerUp, true);\n            return ()=>{\n                document.removeEventListener('pointerdown', onPointerDown, true);\n                document.removeEventListener('pointerup', onPointerUp, true);\n            };\n        } else {\n            let onMouseUp = (e)=>{\n                if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;\n                else if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n                    state.isPointerDown = false;\n                    state.onInteractOutside(e);\n                }\n            };\n            let onTouchEnd = (e)=>{\n                state.ignoreEmulatedMouseEvents = true;\n                if (state.onInteractOutside && state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n                    state.isPointerDown = false;\n                    state.onInteractOutside(e);\n                }\n            };\n            document.addEventListener('mousedown', onPointerDown, true);\n            document.addEventListener('mouseup', onMouseUp, true);\n            document.addEventListener('touchstart', onPointerDown, true);\n            document.addEventListener('touchend', onTouchEnd, true);\n            return ()=>{\n                document.removeEventListener('mousedown', onPointerDown, true);\n                document.removeEventListener('mouseup', onMouseUp, true);\n                document.removeEventListener('touchstart', onPointerDown, true);\n                document.removeEventListener('touchend', onTouchEnd, true);\n            };\n        }\n    }, [\n        ref,\n        state,\n        isDisabled\n    ]);\n}\nfunction $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {\n    if (event.button > 0) return false;\n    // if the event target is no longer in the document\n    if (event.target) {\n        const ownerDocument = event.target.ownerDocument;\n        if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n    }\n    return ref.current && !ref.current.contains(event.target);\n}\n\n\nvar $46d819fcbaf35654$exports = {};\n\n$parcel$export$1($46d819fcbaf35654$exports, \"useKeyboard\", () => $46d819fcbaf35654$export$8f71654801c2f7cd);\nfunction $93925083ecbb358c$export$48d1ea6320830260(handler) {\n    if (!handler) return;\n    let shouldStopPropagation = true;\n    return (e)=>{\n        let event = {\n            ...e,\n            preventDefault () {\n                e.preventDefault();\n            },\n            isDefaultPrevented () {\n                return e.isDefaultPrevented();\n            },\n            stopPropagation () {\n                console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n            },\n            continuePropagation () {\n                shouldStopPropagation = false;\n            }\n        };\n        handler(event);\n        if (shouldStopPropagation) e.stopPropagation();\n    };\n}\n\n\nfunction $46d819fcbaf35654$export$8f71654801c2f7cd(props) {\n    return {\n        keyboardProps: props.isDisabled ? {\n        } : {\n            onKeyDown: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyDown),\n            onKeyUp: $93925083ecbb358c$export$48d1ea6320830260(props.onKeyUp)\n        }\n    };\n}\n\n\nvar $e8a7022cf87cba2a$exports = {};\n\n$parcel$export$1($e8a7022cf87cba2a$exports, \"useMove\", () => $e8a7022cf87cba2a$export$36da96379f79f245);\n\n\n\nfunction $e8a7022cf87cba2a$export$36da96379f79f245(props) {\n    let { onMoveStart: onMoveStart , onMove: onMove , onMoveEnd: onMoveEnd  } = props;\n    let state = React.useRef({\n        didMove: false,\n        lastPosition: null,\n        id: null\n    });\n    let { addGlobalListener: addGlobalListener , removeGlobalListener: removeGlobalListener  } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();\n    let moveProps1 = React.useMemo(()=>{\n        let moveProps = {\n        };\n        let start = ()=>{\n            $14c0b72509d70225$export$16a4697467175487();\n            state.current.didMove = false;\n        };\n        let move = (originalEvent, pointerType, deltaX, deltaY)=>{\n            if (deltaX === 0 && deltaY === 0) return;\n            if (!state.current.didMove) {\n                state.current.didMove = true;\n                onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({\n                    type: 'movestart',\n                    pointerType: pointerType,\n                    shiftKey: originalEvent.shiftKey,\n                    metaKey: originalEvent.metaKey,\n                    ctrlKey: originalEvent.ctrlKey,\n                    altKey: originalEvent.altKey\n                });\n            }\n            onMove({\n                type: 'move',\n                pointerType: pointerType,\n                deltaX: deltaX,\n                deltaY: deltaY,\n                shiftKey: originalEvent.shiftKey,\n                metaKey: originalEvent.metaKey,\n                ctrlKey: originalEvent.ctrlKey,\n                altKey: originalEvent.altKey\n            });\n        };\n        let end = (originalEvent, pointerType)=>{\n            $14c0b72509d70225$export$b0d6fa1ab32e3295();\n            if (state.current.didMove) onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({\n                type: 'moveend',\n                pointerType: pointerType,\n                shiftKey: originalEvent.shiftKey,\n                metaKey: originalEvent.metaKey,\n                ctrlKey: originalEvent.ctrlKey,\n                altKey: originalEvent.altKey\n            });\n        };\n        if (typeof PointerEvent === 'undefined') {\n            let onMouseMove = (e)=>{\n                if (e.button === 0) {\n                    move(e, 'mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n                    state.current.lastPosition = {\n                        pageX: e.pageX,\n                        pageY: e.pageY\n                    };\n                }\n            };\n            let onMouseUp = (e)=>{\n                if (e.button === 0) {\n                    end(e, 'mouse');\n                    removeGlobalListener(window, 'mousemove', onMouseMove, false);\n                    removeGlobalListener(window, 'mouseup', onMouseUp, false);\n                }\n            };\n            moveProps.onMouseDown = (e)=>{\n                if (e.button === 0) {\n                    start();\n                    e.stopPropagation();\n                    e.preventDefault();\n                    state.current.lastPosition = {\n                        pageX: e.pageX,\n                        pageY: e.pageY\n                    };\n                    addGlobalListener(window, 'mousemove', onMouseMove, false);\n                    addGlobalListener(window, 'mouseup', onMouseUp, false);\n                }\n            };\n            let onTouchMove = (e)=>{\n                let touch = [\n                    ...e.changedTouches\n                ].findIndex(({ identifier: identifier  })=>identifier === state.current.id\n                );\n                if (touch >= 0) {\n                    let { pageX: pageX , pageY: pageY  } = e.changedTouches[touch];\n                    move(e, 'touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n                    state.current.lastPosition = {\n                        pageX: pageX,\n                        pageY: pageY\n                    };\n                }\n            };\n            let onTouchEnd = (e)=>{\n                let touch = [\n                    ...e.changedTouches\n                ].findIndex(({ identifier: identifier  })=>identifier === state.current.id\n                );\n                if (touch >= 0) {\n                    end(e, 'touch');\n                    state.current.id = null;\n                    removeGlobalListener(window, 'touchmove', onTouchMove);\n                    removeGlobalListener(window, 'touchend', onTouchEnd);\n                    removeGlobalListener(window, 'touchcancel', onTouchEnd);\n                }\n            };\n            moveProps.onTouchStart = (e)=>{\n                if (e.changedTouches.length === 0 || state.current.id != null) return;\n                let { pageX: pageX , pageY: pageY , identifier: identifier  } = e.changedTouches[0];\n                start();\n                e.stopPropagation();\n                e.preventDefault();\n                state.current.lastPosition = {\n                    pageX: pageX,\n                    pageY: pageY\n                };\n                state.current.id = identifier;\n                addGlobalListener(window, 'touchmove', onTouchMove, false);\n                addGlobalListener(window, 'touchend', onTouchEnd, false);\n                addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n            };\n        } else {\n            let onPointerMove = (e)=>{\n                if (e.pointerId === state.current.id) {\n                    let pointerType = e.pointerType || 'mouse';\n                    // Problems with PointerEvent#movementX/movementY:\n                    // 1. it is always 0 on macOS Safari.\n                    // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n                    move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n                    state.current.lastPosition = {\n                        pageX: e.pageX,\n                        pageY: e.pageY\n                    };\n                }\n            };\n            let onPointerUp = (e)=>{\n                if (e.pointerId === state.current.id) {\n                    let pointerType = e.pointerType || 'mouse';\n                    end(e, pointerType);\n                    state.current.id = null;\n                    removeGlobalListener(window, 'pointermove', onPointerMove, false);\n                    removeGlobalListener(window, 'pointerup', onPointerUp, false);\n                    removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n                }\n            };\n            moveProps.onPointerDown = (e)=>{\n                if (e.button === 0 && state.current.id == null) {\n                    start();\n                    e.stopPropagation();\n                    e.preventDefault();\n                    state.current.lastPosition = {\n                        pageX: e.pageX,\n                        pageY: e.pageY\n                    };\n                    state.current.id = e.pointerId;\n                    addGlobalListener(window, 'pointermove', onPointerMove, false);\n                    addGlobalListener(window, 'pointerup', onPointerUp, false);\n                    addGlobalListener(window, 'pointercancel', onPointerUp, false);\n                }\n            };\n        }\n        let triggerKeyboardMove = (e, deltaX, deltaY)=>{\n            start();\n            move(e, 'keyboard', deltaX, deltaY);\n            end(e, 'keyboard');\n        };\n        moveProps.onKeyDown = (e)=>{\n            switch(e.key){\n                case 'Left':\n                case 'ArrowLeft':\n                    e.preventDefault();\n                    e.stopPropagation();\n                    triggerKeyboardMove(e, -1, 0);\n                    break;\n                case 'Right':\n                case 'ArrowRight':\n                    e.preventDefault();\n                    e.stopPropagation();\n                    triggerKeyboardMove(e, 1, 0);\n                    break;\n                case 'Up':\n                case 'ArrowUp':\n                    e.preventDefault();\n                    e.stopPropagation();\n                    triggerKeyboardMove(e, 0, -1);\n                    break;\n                case 'Down':\n                case 'ArrowDown':\n                    e.preventDefault();\n                    e.stopPropagation();\n                    triggerKeyboardMove(e, 0, 1);\n                    break;\n            }\n        };\n        return moveProps;\n    }, [\n        state,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n        addGlobalListener,\n        removeGlobalListener\n    ]);\n    return {\n        moveProps: moveProps1\n    };\n}\n\n\n\nvar $7d0a636d7a4dcefd$exports = {};\n\n$parcel$export$1($7d0a636d7a4dcefd$exports, \"useScrollWheel\", () => $7d0a636d7a4dcefd$export$2123ff2b87c81ca);\n\n\nfunction $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {\n    let { onScroll: onScroll , isDisabled: isDisabled  } = props;\n    let onScrollHandler = React.useCallback((e)=>{\n        // If the ctrlKey is pressed, this is a zoom event, do nothing.\n        if (e.ctrlKey) return;\n        // stop scrolling the page\n        e.preventDefault();\n        e.stopPropagation();\n        if (onScroll) onScroll({\n            deltaX: e.deltaX,\n            deltaY: e.deltaY\n        });\n    }, [\n        onScroll\n    ]);\n    $e9faafb641e167db$export$90fc3a17d93f704c(ref, 'wheel', isDisabled ? null : onScrollHandler);\n}\n\n\nvar $8a26561d2877236e$exports = {};\n\n$parcel$export$1($8a26561d2877236e$exports, \"useLongPress\", () => $8a26561d2877236e$export$c24ed0104d07eab9);\n\n\n\nconst $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;\nfunction $8a26561d2877236e$export$c24ed0104d07eab9(props) {\n    let { isDisabled: isDisabled , onLongPressStart: onLongPressStart , onLongPressEnd: onLongPressEnd , onLongPress: onLongPress , threshold: threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD , accessibilityDescription: accessibilityDescription  } = props;\n    const timeRef = React.useRef(null);\n    let { addGlobalListener: addGlobalListener , removeGlobalListener: removeGlobalListener  } = $03deb23ff14920c4$export$4eaf04e54aa8eed6();\n    let { pressProps: pressProps  } = $f6c31cce2adf654f$export$45712eceda6fad21({\n        isDisabled: isDisabled,\n        onPressStart (e1) {\n            if (e1.pointerType === 'mouse' || e1.pointerType === 'touch') {\n                if (onLongPressStart) onLongPressStart({\n                    ...e1,\n                    type: 'longpressstart'\n                });\n                timeRef.current = setTimeout(()=>{\n                    // Prevent other usePress handlers from also handling this event.\n                    e1.target.dispatchEvent(new PointerEvent('pointercancel', {\n                        bubbles: true\n                    }));\n                    if (onLongPress) onLongPress({\n                        ...e1,\n                        type: 'longpress'\n                    });\n                    timeRef.current = null;\n                }, threshold);\n                // Prevent context menu, which may be opened on long press on touch devices\n                if (e1.pointerType === 'touch') {\n                    let onContextMenu = (e)=>{\n                        e.preventDefault();\n                    };\n                    addGlobalListener(e1.target, 'contextmenu', onContextMenu, {\n                        once: true\n                    });\n                    addGlobalListener(window, 'pointerup', ()=>{\n                        // If no contextmenu event is fired quickly after pointerup, remove the handler\n                        // so future context menu events outside a long press are not prevented.\n                        setTimeout(()=>{\n                            removeGlobalListener(e1.target, 'contextmenu', onContextMenu);\n                        }, 30);\n                    }, {\n                        once: true\n                    });\n                }\n            }\n        },\n        onPressEnd (e) {\n            if (timeRef.current) clearTimeout(timeRef.current);\n            if (onLongPressEnd && (e.pointerType === 'mouse' || e.pointerType === 'touch')) onLongPressEnd({\n                ...e,\n                type: 'longpressend'\n            });\n        }\n    });\n    let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa1(onLongPress && !isDisabled ? accessibilityDescription : null);\n    return {\n        longPressProps: $3ef42575df84b30b$export$9d1611c77c2fe928(pressProps, descriptionProps)\n    };\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $9bf71ea28793e738$exports = {};\n\n$parcel$export($9bf71ea28793e738$exports, \"FocusScope\", () => $9bf71ea28793e738$export$20e40289641fbbb6);\n$parcel$export($9bf71ea28793e738$exports, \"useFocusManager\", () => $9bf71ea28793e738$export$10c5169755ce7bd7);\n$parcel$export($9bf71ea28793e738$exports, \"getFocusableTreeWalker\", () => $9bf71ea28793e738$export$2d6ec8fc375ceafa);\n$parcel$export($9bf71ea28793e738$exports, \"createFocusManager\", () => $9bf71ea28793e738$export$c5251b9e124bf29);\nvar $6a99195332edec8b$exports = {};\n\n$parcel$export($6a99195332edec8b$exports, \"focusSafely\", () => $6a99195332edec8b$export$80f3e147d781571c);\n\n\nfunction $6a99195332edec8b$export$80f3e147d781571c(element) {\n    // If the user is interacting with a virtual cursor, e.g. screen reader, then\n    // wait until after any animated transitions that are currently occurring on\n    // the page before shifting focus. This avoids issues with VoiceOver on iOS\n    // causing the page to scroll when moving focus if the element is transitioning\n    // from off the screen.\n    if ($507fabe10e71c6fb$export$630ff653c5ada6a9() === 'virtual') {\n        let lastFocusedElement = document.activeElement;\n        $bbed8b41f857bcc0$export$24490316f764c430(()=>{\n            // If focus did not move and the element is still in the document, focus it.\n            if (document.activeElement === lastFocusedElement && document.contains(element)) $7215afc6de606d6b$export$de79e2c695e052f3(element);\n        });\n    } else $7215afc6de606d6b$export$de79e2c695e052f3(element);\n}\n\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $645f2e67b85a24c9$var$isStyleVisible(element) {\n    if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) return false;\n    let { display: display , visibility: visibility  } = element.style;\n    let isVisible = display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse';\n    if (isVisible) {\n        const { getComputedStyle: getComputedStyle  } = element.ownerDocument.defaultView;\n        let { display: computedDisplay , visibility: computedVisibility  } = getComputedStyle(element);\n        isVisible = computedDisplay !== 'none' && computedVisibility !== 'hidden' && computedVisibility !== 'collapse';\n    }\n    return isVisible;\n}\nfunction $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {\n    return !element.hasAttribute('hidden') && (element.nodeName === 'DETAILS' && childElement && childElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true);\n}\nfunction $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {\n    return element.nodeName !== '#comment' && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));\n}\n\n\n\n\nconst $9bf71ea28793e738$var$FocusContext = /*#__PURE__*/ React__default[\"default\"].createContext(null);\nlet $9bf71ea28793e738$var$activeScope = null;\nlet $9bf71ea28793e738$var$scopes = new Map();\nfunction $9bf71ea28793e738$export$20e40289641fbbb6(props) {\n    let { children: children , contain: contain , restoreFocus: restoreFocus , autoFocus: autoFocus  } = props;\n    let startRef = React.useRef();\n    let endRef = React.useRef();\n    let scopeRef = React.useRef([]);\n    let ctx = React.useContext($9bf71ea28793e738$var$FocusContext);\n    let parentScope = ctx === null || ctx === void 0 ? void 0 : ctx.scopeRef;\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        // Find all rendered nodes between the sentinels and add them to the scope.\n        let node = startRef.current.nextSibling;\n        let nodes = [];\n        while(node && node !== endRef.current){\n            nodes.push(node);\n            node = node.nextSibling;\n        }\n        scopeRef.current = nodes;\n    }, [\n        children,\n        parentScope\n    ]);\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        $9bf71ea28793e738$var$scopes.set(scopeRef, parentScope);\n        return ()=>{\n            // Restore the active scope on unmount if this scope or a descendant scope is active.\n            // Parent effect cleanups run before children, so we need to check if the\n            // parent scope actually still exists before restoring the active scope to it.\n            if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$var$scopes.has(parentScope))) $9bf71ea28793e738$var$activeScope = parentScope;\n            $9bf71ea28793e738$var$scopes.delete(scopeRef);\n        };\n    }, [\n        scopeRef,\n        parentScope\n    ]);\n    $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);\n    $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n    $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);\n    let focusManager = $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef);\n    return(/*#__PURE__*/ React__default[\"default\"].createElement($9bf71ea28793e738$var$FocusContext.Provider, {\n        value: {\n            scopeRef: scopeRef,\n            focusManager: focusManager\n        }\n    }, /*#__PURE__*/ React__default[\"default\"].createElement(\"span\", {\n        \"data-focus-scope-start\": true,\n        hidden: true,\n        ref: startRef\n    }), children, /*#__PURE__*/ React__default[\"default\"].createElement(\"span\", {\n        \"data-focus-scope-end\": true,\n        hidden: true,\n        ref: endRef\n    })));\n}\nfunction $9bf71ea28793e738$export$10c5169755ce7bd7() {\n    var ref;\n    return (ref = React.useContext($9bf71ea28793e738$var$FocusContext)) === null || ref === void 0 ? void 0 : ref.focusManager;\n}\nfunction $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {\n    return {\n        focusNext (opts = {\n        }) {\n            let scope = scopeRef.current;\n            let { from: from , tabbable: tabbable , wrap: wrap  } = opts;\n            let node = from || document.activeElement;\n            let sentinel = scope[0].previousElementSibling;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n                tabbable: tabbable\n            }, scope);\n            walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n            let nextNode = walker.nextNode();\n            if (!nextNode && wrap) {\n                walker.currentNode = sentinel;\n                nextNode = walker.nextNode();\n            }\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusPrevious (opts = {\n        }) {\n            let scope = scopeRef.current;\n            let { from: from , tabbable: tabbable , wrap: wrap  } = opts;\n            let node = from || document.activeElement;\n            let sentinel = scope[scope.length - 1].nextElementSibling;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n                tabbable: tabbable\n            }, scope);\n            walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;\n            let previousNode = walker.previousNode();\n            if (!previousNode && wrap) {\n                walker.currentNode = sentinel;\n                previousNode = walker.previousNode();\n            }\n            if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n            return previousNode;\n        },\n        focusFirst (opts = {\n        }) {\n            let scope = scopeRef.current;\n            let { tabbable: tabbable  } = opts;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n                tabbable: tabbable\n            }, scope);\n            walker.currentNode = scope[0].previousElementSibling;\n            let nextNode = walker.nextNode();\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusLast (opts = {\n        }) {\n            let scope = scopeRef.current;\n            let { tabbable: tabbable  } = opts;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n                tabbable: tabbable\n            }, scope);\n            walker.currentNode = scope[scope.length - 1].nextElementSibling;\n            let previousNode = walker.previousNode();\n            if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n            return previousNode;\n        }\n    };\n}\nconst $9bf71ea28793e738$var$focusableElements = [\n    'input:not([disabled]):not([type=hidden])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    'button:not([disabled])',\n    'a[href]',\n    'area[href]',\n    'summary',\n    'iframe',\n    'object',\n    'embed',\n    'audio[controls]',\n    'video[controls]',\n    '[contenteditable]'\n];\nconst $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $9bf71ea28793e738$var$getScopeRoot(scope) {\n    return scope[0].parentElement;\n}\nfunction $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {\n    let focusedNode = React.useRef();\n    let raf = React.useRef(null);\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        let scope1 = scopeRef.current;\n        if (!contain) return;\n        // Handle the Tab key to contain focus within the scope\n        let onKeyDown = (e)=>{\n            if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || scopeRef !== $9bf71ea28793e738$var$activeScope) return;\n            let focusedElement = document.activeElement;\n            let scope = scopeRef.current;\n            if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scope)) return;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n                tabbable: true\n            }, scope);\n            walker.currentNode = focusedElement;\n            let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n            if (!nextElement) {\n                walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n                nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n            }\n            e.preventDefault();\n            if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);\n        };\n        let onFocus = (e)=>{\n            // If focusing an element in a child scope of the currently active scope, the child becomes active.\n            // Moving out of the active scope to an ancestor is not allowed.\n            if (!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) {\n                $9bf71ea28793e738$var$activeScope = scopeRef;\n                focusedNode.current = e.target;\n            } else if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(e.target, scopeRef)) {\n                // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n                // restore focus to the previously focused node or the first tabbable element in the active scope.\n                if (focusedNode.current) focusedNode.current.focus();\n                else if ($9bf71ea28793e738$var$activeScope) $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);\n            } else if (scopeRef === $9bf71ea28793e738$var$activeScope) focusedNode.current = e.target;\n        };\n        let onBlur = (e)=>{\n            // Firefox doesn't shift focus back to the Dialog properly without this\n            raf.current = requestAnimationFrame(()=>{\n                // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n                if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(document.activeElement, scopeRef)) {\n                    $9bf71ea28793e738$var$activeScope = scopeRef;\n                    focusedNode.current = e.target;\n                    focusedNode.current.focus();\n                }\n            });\n        };\n        document.addEventListener('keydown', onKeyDown, false);\n        document.addEventListener('focusin', onFocus, false);\n        scope1.forEach((element)=>element.addEventListener('focusin', onFocus, false)\n        );\n        scope1.forEach((element)=>element.addEventListener('focusout', onBlur, false)\n        );\n        return ()=>{\n            document.removeEventListener('keydown', onKeyDown, false);\n            document.removeEventListener('focusin', onFocus, false);\n            scope1.forEach((element)=>element.removeEventListener('focusin', onFocus, false)\n            );\n            scope1.forEach((element)=>element.removeEventListener('focusout', onBlur, false)\n            );\n        };\n    }, [\n        scopeRef,\n        contain\n    ]);\n    // eslint-disable-next-line arrow-body-style\n    React.useEffect(()=>{\n        return ()=>cancelAnimationFrame(raf.current)\n        ;\n    }, [\n        raf\n    ]);\n}\nfunction $9bf71ea28793e738$var$isElementInAnyScope(element) {\n    for (let scope of $9bf71ea28793e738$var$scopes.keys()){\n        if ($9bf71ea28793e738$var$isElementInScope(element, scope.current)) return true;\n    }\n    return false;\n}\nfunction $9bf71ea28793e738$var$isElementInScope(element, scope) {\n    return scope.some((node)=>node.contains(element)\n    );\n}\nfunction $9bf71ea28793e738$var$isElementInChildScope(element, scope) {\n    // node.contains in isElementInScope covers child scopes that are also DOM children,\n    // but does not cover child scopes in portals.\n    for (let s of $9bf71ea28793e738$var$scopes.keys()){\n        if ((s === scope || $9bf71ea28793e738$var$isAncestorScope(scope, s)) && $9bf71ea28793e738$var$isElementInScope(element, s.current)) return true;\n    }\n    return false;\n}\nfunction $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {\n    let parent = $9bf71ea28793e738$var$scopes.get(scope);\n    if (!parent) return false;\n    if (parent === ancestor) return true;\n    return $9bf71ea28793e738$var$isAncestorScope(ancestor, parent);\n}\nfunction $9bf71ea28793e738$var$focusElement(element, scroll = false) {\n    if (element != null && !scroll) try {\n        $6a99195332edec8b$export$80f3e147d781571c(element);\n    } catch (err) {\n    // ignore\n    }\n    else if (element != null) try {\n        element.focus();\n    } catch (err1) {\n    // ignore\n    }\n}\nfunction $9bf71ea28793e738$var$focusFirstInScope(scope) {\n    let sentinel = scope[0].previousElementSibling;\n    let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {\n        tabbable: true\n    }, scope);\n    walker.currentNode = sentinel;\n    $9bf71ea28793e738$var$focusElement(walker.nextNode());\n}\nfunction $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {\n    const autoFocusRef = React__default[\"default\"].useRef(autoFocus);\n    React.useEffect(()=>{\n        if (autoFocusRef.current) {\n            $9bf71ea28793e738$var$activeScope = scopeRef;\n            if (!$9bf71ea28793e738$var$isElementInScope(document.activeElement, $9bf71ea28793e738$var$activeScope.current)) $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);\n        }\n        autoFocusRef.current = false;\n    }, []);\n}\nfunction $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n    // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n    const nodeToRestoreRef = React.useRef(typeof document !== 'undefined' ? document.activeElement : null);\n    // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n    $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(()=>{\n        let nodeToRestore = nodeToRestoreRef.current;\n        if (!restoreFocus) return;\n        // Handle the Tab key so that tabbing out of the scope goes to the next element\n        // after the node that had focus when the scope mounted. This is important when\n        // using portals for overlays, so that focus goes to the expected element when\n        // tabbing out of the overlay.\n        let onKeyDown = (e)=>{\n            if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) return;\n            let focusedElement = document.activeElement;\n            if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current)) return;\n            // Create a DOM tree walker that matches all tabbable elements\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(document.body, {\n                tabbable: true\n            });\n            // Find the next tabbable element after the currently focused element\n            walker.currentNode = focusedElement;\n            let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n            if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) nodeToRestore = null;\n            // If there is no next element, or it is outside the current scope, move focus to the\n            // next element after the node to restore to instead.\n            if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n                walker.currentNode = nodeToRestore;\n                // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n                do nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n                while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current))\n                e.preventDefault();\n                e.stopPropagation();\n                if (nextElement) $9bf71ea28793e738$var$focusElement(nextElement, true);\n                else // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n                // then move focus to the body.\n                // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n                if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();\n                else $9bf71ea28793e738$var$focusElement(nodeToRestore, true);\n            }\n        };\n        if (!contain) document.addEventListener('keydown', onKeyDown, true);\n        return ()=>{\n            if (!contain) document.removeEventListener('keydown', onKeyDown, true);\n            if (restoreFocus && nodeToRestore && $9bf71ea28793e738$var$isElementInScope(document.activeElement, scopeRef.current)) requestAnimationFrame(()=>{\n                if (document.body.contains(nodeToRestore)) $9bf71ea28793e738$var$focusElement(nodeToRestore);\n            });\n        };\n    }, [\n        scopeRef,\n        restoreFocus,\n        contain\n    ]);\n}\nfunction $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {\n    let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;\n    let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n        acceptNode (node) {\n            var ref;\n            // Skip nodes inside the starting node.\n            if (opts === null || opts === void 0 ? void 0 : (ref = opts.from) === null || ref === void 0 ? void 0 : ref.contains(node)) return NodeFilter.FILTER_REJECT;\n            if (node.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope))) return NodeFilter.FILTER_ACCEPT;\n            return NodeFilter.FILTER_SKIP;\n        }\n    });\n    if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n    return walker;\n}\nfunction $9bf71ea28793e738$export$c5251b9e124bf29(ref) {\n    return {\n        focusNext (opts = {\n        }) {\n            let root = ref.current;\n            let { from: from , tabbable: tabbable , wrap: wrap  } = opts;\n            let node = from || document.activeElement;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable\n            });\n            if (root.contains(node)) walker.currentNode = node;\n            let nextNode = walker.nextNode();\n            if (!nextNode && wrap) {\n                walker.currentNode = root;\n                nextNode = walker.nextNode();\n            }\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusPrevious (opts = {\n        }) {\n            let root = ref.current;\n            let { from: from , tabbable: tabbable , wrap: wrap  } = opts;\n            let node = from || document.activeElement;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable\n            });\n            if (root.contains(node)) walker.currentNode = node;\n            else {\n                let next = $9bf71ea28793e738$var$last(walker);\n                if (next) $9bf71ea28793e738$var$focusElement(next, true);\n                return next;\n            }\n            let previousNode = walker.previousNode();\n            if (!previousNode && wrap) {\n                walker.currentNode = root;\n                previousNode = $9bf71ea28793e738$var$last(walker);\n            }\n            if (previousNode) $9bf71ea28793e738$var$focusElement(previousNode, true);\n            return previousNode;\n        },\n        focusFirst (opts = {\n        }) {\n            let root = ref.current;\n            let { tabbable: tabbable  } = opts;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable\n            });\n            let nextNode = walker.nextNode();\n            if (nextNode) $9bf71ea28793e738$var$focusElement(nextNode, true);\n            return nextNode;\n        },\n        focusLast (opts = {\n        }) {\n            let root = ref.current;\n            let { tabbable: tabbable  } = opts;\n            let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {\n                tabbable: tabbable\n            });\n            let next = $9bf71ea28793e738$var$last(walker);\n            if (next) $9bf71ea28793e738$var$focusElement(next, true);\n            return next;\n        }\n    };\n}\nfunction $9bf71ea28793e738$var$last(walker) {\n    let next;\n    let last;\n    do {\n        last = walker.lastChild();\n        if (last) next = last;\n    }while (last)\n    return next;\n}\n\n\nvar $907718708eab68af$exports = {};\n\n$parcel$export($907718708eab68af$exports, \"FocusRing\", () => $907718708eab68af$export$1a38b4ad7f578e1d);\n\n\n\nvar $f7dceffc5ad7768b$exports = {};\n\n$parcel$export($f7dceffc5ad7768b$exports, \"useFocusRing\", () => $f7dceffc5ad7768b$export$4e328f61c538687f);\n\n\n\nfunction $f7dceffc5ad7768b$export$4e328f61c538687f(props = {\n}) {\n    let { autoFocus: autoFocus = false , isTextInput: isTextInput , within: within  } = props;\n    let state = React.useRef({\n        isFocused: false,\n        isFocusVisible: autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()\n    }).current;\n    let [isFocused1, setFocused] = React.useState(false);\n    let [isFocusVisibleState, setFocusVisible] = React.useState(()=>state.isFocused && state.isFocusVisible\n    );\n    let updateState = ()=>setFocusVisible(state.isFocused && state.isFocusVisible)\n    ;\n    let onFocusChange = (isFocused)=>{\n        state.isFocused = isFocused;\n        setFocused(isFocused);\n        updateState();\n    };\n    $507fabe10e71c6fb$export$ec71b4b83ac08ec3((isFocusVisible)=>{\n        state.isFocusVisible = isFocusVisible;\n        updateState();\n    }, [], {\n        isTextInput: isTextInput\n    });\n    let { focusProps: focusProps  } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6({\n        isDisabled: within,\n        onFocusChange: onFocusChange\n    });\n    let { focusWithinProps: focusWithinProps  } = $9ab94262bd0047c7$export$420e68273165f4ec({\n        isDisabled: !within,\n        onFocusWithinChange: onFocusChange\n    });\n    return {\n        isFocused: isFocused1,\n        isFocusVisible: state.isFocused && isFocusVisibleState,\n        focusProps: within ? focusWithinProps : focusProps\n    };\n}\n\n\nfunction $907718708eab68af$export$1a38b4ad7f578e1d(props) {\n    let { children: children , focusClass: focusClass , focusRingClass: focusRingClass  } = props;\n    let { isFocused: isFocused , isFocusVisible: isFocusVisible , focusProps: focusProps  } = $f7dceffc5ad7768b$export$4e328f61c538687f(props);\n    let child = React__default[\"default\"].Children.only(children);\n    return(/*#__PURE__*/ React__default[\"default\"].cloneElement(child, $3ef42575df84b30b$export$9d1611c77c2fe928(child.props, {\n        ...focusProps,\n        className: $6nfFC$clsx({\n            [focusClass || '']: isFocused,\n            [focusRingClass || '']: isFocusVisible\n        })\n    })));\n}\n\n\nvar $e6afbd83fe6ebbd2$exports = {};\n\n$parcel$export($e6afbd83fe6ebbd2$exports, \"FocusableProvider\", () => $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5);\n$parcel$export($e6afbd83fe6ebbd2$exports, \"useFocusable\", () => $e6afbd83fe6ebbd2$export$4c014de7c8940b4c);\n\n\n\n\nlet $e6afbd83fe6ebbd2$var$FocusableContext = /*#__PURE__*/ React__default[\"default\"].createContext(null);\nfunction $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {\n    let context = React.useContext($e6afbd83fe6ebbd2$var$FocusableContext) || {\n    };\n    $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref);\n    // eslint-disable-next-line\n    let { ref: _ , ...otherProps } = context;\n    return otherProps;\n}\n/**\n * Provides DOM props to the nearest focusable child.\n */ function $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {\n    let { children: children , ...otherProps } = props;\n    let context = {\n        ...otherProps,\n        ref: ref\n    };\n    return(/*#__PURE__*/ React__default[\"default\"].createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {\n        value: context\n    }, children));\n}\nlet $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = /*#__PURE__*/ React__default[\"default\"].forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);\nfunction $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {\n    let { focusProps: focusProps  } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props);\n    let { keyboardProps: keyboardProps  } = $46d819fcbaf35654$export$8f71654801c2f7cd(props);\n    let interactions = $3ef42575df84b30b$export$9d1611c77c2fe928(focusProps, keyboardProps);\n    let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);\n    let interactionProps = props.isDisabled ? {\n    } : domProps;\n    let autoFocusRef = React.useRef(props.autoFocus);\n    React.useEffect(()=>{\n        if (autoFocusRef.current && domRef.current) $6a99195332edec8b$export$80f3e147d781571c(domRef.current);\n        autoFocusRef.current = false;\n    }, [\n        domRef\n    ]);\n    return {\n        focusableProps: $3ef42575df84b30b$export$9d1611c77c2fe928({\n            ...interactions,\n            tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n        }, interactionProps)\n    };\n}\n\nfunction renderStack(as, props, hasGap, ref) {\r\n    var children = props.children, rest = __rest(props, [\"children\"]);\r\n    var wrappedChildren = wrapFlexContainerChildren(children, hasGap !== null && hasGap !== void 0 ? hasGap : false);\r\n    return createElementWithChildren(as, exports.__assign({ ref: ref }, rest), wrappedChildren);\r\n}\r\nfunction FlexStack_(props, outerRef) {\r\n    var as = props.as, hasGap = props.hasGap, rest = __rest(props, [\"as\", \"hasGap\"]);\r\n    return renderStack(as !== null && as !== void 0 ? as : \"div\", rest, hasGap, outerRef);\r\n}\r\nvar FlexStack = React__namespace.forwardRef(FlexStack_);\r\nvar makeStackImpl = function (as) {\r\n    return React__namespace.forwardRef(function (props, ref) {\r\n        var hasGap = props.hasGap, rest = __rest(props, [\"hasGap\"]);\r\n        return renderStack(as, rest, hasGap, ref);\r\n    });\r\n};\r\nvar Stack = Object.assign(FlexStack, {\r\n    div: makeStackImpl(\"div\"),\r\n    a: makeStackImpl(\"a\"),\r\n    button: makeStackImpl(\"button\"),\r\n    h1: makeStackImpl(\"h1\"),\r\n    h2: makeStackImpl(\"h2\"),\r\n    h3: makeStackImpl(\"h3\"),\r\n    h4: makeStackImpl(\"h4\"),\r\n    h5: makeStackImpl(\"h5\"),\r\n    h6: makeStackImpl(\"h6\"),\r\n    label: makeStackImpl(\"label\"),\r\n    form: makeStackImpl(\"form\"),\r\n    section: makeStackImpl(\"section\"),\r\n    head: makeStackImpl(\"head\"),\r\n    main: makeStackImpl(\"main\"),\r\n    nav: makeStackImpl(\"nav\"),\r\n});\n\nfunction hasVariant(variants, groupName, variant) {\r\n    if (variants == null) {\r\n        return false;\r\n    }\r\n    var groupVariants = variants[groupName];\r\n    if (groupVariants == null) {\r\n        return false;\r\n    }\r\n    else if (groupVariants === true) {\r\n        return variant === groupName;\r\n    }\r\n    else if (groupVariants === false) {\r\n        return false;\r\n    }\r\n    else if (Array.isArray(groupVariants)) {\r\n        return groupVariants.includes(variant);\r\n    }\r\n    else if (typeof groupVariants === \"string\") {\r\n        return groupVariants === variant;\r\n    }\r\n    else {\r\n        return (groupVariants[variant] !== undefined && groupVariants[variant] !== false);\r\n    }\r\n}\r\nfunction wrapFlexContainerChildren(children, hasGap) {\r\n    // We need to always wrap the children, even if there are no gaps, because\r\n    // otherwise if we toggle between with and without gap, React reconciliation\r\n    // will blow away the children tree and all state if we switch from having\r\n    // a wrapper and not.\r\n    var className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\r\n    if (!children) {\r\n        return null;\r\n    }\r\n    else if (Array.isArray(children)) {\r\n        return React__namespace.createElement.apply(React__namespace, __spreadArray([\"div\", { className: className }], children));\r\n    }\r\n    else {\r\n        return React__namespace.createElement(\"div\", { className: className }, children);\r\n    }\r\n}\r\nfunction createPlasmicElement(override, defaultRoot, defaultProps, wrapChildrenInFlex) {\r\n    if (!override || Object.keys(override).length === 0) {\r\n        return createElementWithChildren(defaultRoot, defaultProps, defaultProps.children);\r\n    }\r\n    var override2 = deriveOverride(override);\r\n    var props = mergeOverrideProps(defaultProps, override2.props);\r\n    if (override2.type === \"render\") {\r\n        return override2.render(props, defaultRoot);\r\n    }\r\n    var root = defaultRoot;\r\n    if (override2.type === \"as\" && override2.as) {\r\n        if (defaultRoot === Stack) {\r\n            // If there was an \"as\" override specified, but the default type is\r\n            // a Stack, then we don't want to switch to using \"as\" as the root,\r\n            // because then we'd lose the flex wrapper that Stack provides.\r\n            // Instead, we specify the \"as\" as the \"as\" prop to Stack.\r\n            props.as = override2.as;\r\n        }\r\n        else {\r\n            root = override2.as;\r\n        }\r\n    }\r\n    var children = props.children;\r\n    if (override2.wrapChildren) {\r\n        children = override2.wrapChildren(ensureNotArray(children));\r\n    }\r\n    if (wrapChildrenInFlex) {\r\n        // For legacy, we still support data-plasmic-wrap-flex-children\r\n        children = wrapFlexContainerChildren(children, true);\r\n    }\r\n    var result = createElementWithChildren(root, props, children);\r\n    if (override2.wrap) {\r\n        result = override2.wrap(result);\r\n    }\r\n    return result;\r\n}\r\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\r\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\r\n// for more info.\r\nvar seenElements = new Map();\r\nfunction createPlasmicElementProxy(defaultElement, props) {\r\n    // We use seenElements to keep track of elements that has been rendered by\r\n    // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\r\n    // is invoked from the leaf to the root as the last call.  So we can store\r\n    // all the elements we've created until we encounter the leaf, at which point\r\n    // we will clear this map.  We are guaranteed that this map will only contain\r\n    // elements from one Plasmic* component at a time, because we're just creating\r\n    // elements and not \"rendering\" at this point; even if this JSX tree references\r\n    // other Plasmic* elements, we'll just create an element referencing that component,\r\n    // rather than following into the content of that component.\r\n    //\r\n    // TODO: is this ConcurrentMode friendly?\r\n    var _a;\r\n    var children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        children[_i - 2] = arguments[_i];\r\n    }\r\n    if (props == null) {\r\n        props = {};\r\n    }\r\n    var name = props[\"data-plasmic-name\"];\r\n    var isRoot = props[\"data-plasmic-root\"];\r\n    var forNodeName = props[\"data-plasmic-for-node\"];\r\n    delete props[\"data-plasmic-name\"];\r\n    delete props[\"data-plasmic-root\"];\r\n    delete props[\"data-plasmic-for-node\"];\r\n    var element = createPlasmicElementFromJsx.apply(void 0, __spreadArray([defaultElement,\r\n        props], children));\r\n    if (name) {\r\n        seenElements.set(name, element);\r\n    }\r\n    if (isRoot) {\r\n        // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\r\n        // then return that node instead\r\n        var forNode = forNodeName\r\n            ? (_a = seenElements.get(forNodeName)) !== null && _a !== void 0 ? _a : null\r\n            : element;\r\n        // Clear out the seenElements map, as we're done rendering this Plasmic* component.\r\n        seenElements.clear();\r\n        return forNode;\r\n    }\r\n    return element;\r\n}\r\nfunction createPlasmicElementFromJsx(defaultElement, props) {\r\n    var _a;\r\n    var children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        children[_i - 2] = arguments[_i];\r\n    }\r\n    var override = props[\"data-plasmic-override\"];\r\n    var wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\r\n    var triggerProps = ((_a = props[\"data-plasmic-trigger-props\"]) !== null && _a !== void 0 ? _a : []);\r\n    delete props[\"data-plasmic-override\"];\r\n    delete props[\"data-plasmic-wrap-flex-child\"];\r\n    delete props[\"data-plasmic-trigger-props\"];\r\n    return createPlasmicElement(override, defaultElement, mergeProps.apply(void 0, __spreadArray([props,\r\n        children.length === 0 ? {} : { children: children.length === 1 ? children[0] : children }], triggerProps)), wrapFlexChild);\r\n}\r\nvar UNSET = Symbol(\"UNSET\");\r\nfunction mergeOverrideProps(defaults, overrides) {\r\n    if (!overrides) {\r\n        return defaults;\r\n    }\r\n    var result = exports.__assign({}, defaults);\r\n    for (var _i = 0, _a = Object.keys(overrides); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var defaultVal = defaults[key];\r\n        var overrideVal = overrides[key];\r\n        if (overrideVal === UNSET) {\r\n            delete result[key];\r\n        }\r\n        else {\r\n            // We use the NONE sentinel if the overrideVal is nil, and is not one of the\r\n            // props that we merge by default -- which are className, style, and\r\n            // event handlers.  This means for all other \"normal\" props -- like children,\r\n            // title, etc -- a nil value will unset the default.\r\n            if (overrideVal == null &&\r\n                key !== \"className\" &&\r\n                key !== \"style\" &&\r\n                !(key.startsWith(\"on\") && typeof defaultVal === \"function\")) {\r\n                overrideVal = NONE;\r\n            }\r\n            result[key] = mergePropVals(key, defaultVal, overrideVal);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction deriveOverride(x) {\r\n    if (!x) {\r\n        // undefined Binding is an empty Binding\r\n        return {\r\n            type: \"default\",\r\n            props: {},\r\n        };\r\n    }\r\n    else if (isReactNode(x)) {\r\n        // If ReactNode, then assume this is the children\r\n        return {\r\n            type: \"default\",\r\n            props: {\r\n                children: x,\r\n            },\r\n        };\r\n    }\r\n    else if (typeof x === \"object\") {\r\n        // If any of the overrideKeys is a key of this object, then assume\r\n        // this is a full Override\r\n        if (\"as\" in x) {\r\n            return exports.__assign(exports.__assign({}, x), { props: x.props || {}, type: \"as\" });\r\n        }\r\n        else if (\"render\" in x) {\r\n            return exports.__assign(exports.__assign({}, x), { type: \"render\" });\r\n        }\r\n        else if (\"props\" in x) {\r\n            return exports.__assign(exports.__assign({}, x), { props: x.props || {}, type: \"default\" });\r\n        }\r\n        else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\r\n            // Only twiddling functions present, so assume no props overrides\r\n            // (otherwise we'd assume these were props).\r\n            return exports.__assign(exports.__assign({}, x), { props: {}, type: \"default\" });\r\n        }\r\n        // Else, assume this is just a props object.\r\n        return {\r\n            type: \"default\",\r\n            props: x,\r\n        };\r\n    }\r\n    else if (typeof x === \"function\") {\r\n        return {\r\n            type: \"render\",\r\n            render: x,\r\n        };\r\n    }\r\n    throw new Error(\"Unexpected override: \" + x);\r\n}\r\nfunction mergeVariants(v1, v2) {\r\n    if (!v1 || !v2) {\r\n        return v1 || v2 || {};\r\n    }\r\n    return exports.__assign(exports.__assign({}, v1), v2);\r\n}\r\nfunction mergeArgs(a1, a2) {\r\n    if (!a1 || !a2) {\r\n        return a1 || a2 || {};\r\n    }\r\n    return exports.__assign(exports.__assign({}, a1), a2);\r\n}\r\nfunction mergeFlexOverrides(o1, o2) {\r\n    if (!o2) {\r\n        return o1;\r\n    }\r\n    var keys = Array.from(new Set(__spreadArray(__spreadArray([], Object.keys(o1)), Object.keys(o2))));\r\n    var merged = {};\r\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\r\n        var key = keys_1[_i];\r\n        merged[key] = mergeFlexOverride(o1[key], o2[key]);\r\n    }\r\n    return merged;\r\n}\r\nfunction mergeFlexOverride(fo1, fo2) {\r\n    var _a, _b;\r\n    if (!fo1) {\r\n        return fo2;\r\n    }\r\n    if (!fo2) {\r\n        return fo1;\r\n    }\r\n    var o1 = deriveOverride(fo1);\r\n    var o2 = deriveOverride(fo2);\r\n    var wrap = chainSingleArgFuncs.apply(void 0, [o1.wrap, o2.wrap].filter(notNil));\r\n    var wrapChildren = chainSingleArgFuncs.apply(void 0, [o1.wrapChildren, o2.wrapChildren].filter(notNil));\r\n    // \"render\" type always takes precedence, but we still merge the props\r\n    var props = mergeOverrideProps((_a = o1.props) !== null && _a !== void 0 ? _a : {}, o2.props);\r\n    if (o2.type === \"render\") {\r\n        return {\r\n            render: o2.render,\r\n            props: props,\r\n            wrap: wrap,\r\n            wrapChildren: wrapChildren,\r\n        };\r\n    }\r\n    if (o1.type === \"render\") {\r\n        return {\r\n            render: o1.render,\r\n            props: props,\r\n            wrap: wrap,\r\n            wrapChildren: wrapChildren,\r\n        };\r\n    }\r\n    // \"as\" will take precedence\r\n    var as = (_b = (o2.type === \"as\" ? o2.as : undefined)) !== null && _b !== void 0 ? _b : (o1.type === \"as\" ? o1.as : undefined);\r\n    return exports.__assign({ props: props,\r\n        wrap: wrap,\r\n        wrapChildren: wrapChildren }, (as ? { as: as } : {}));\r\n}\r\nfunction deriveRenderOpts(props, config) {\r\n    var _a;\r\n    var name = config.name, descendantNames = config.descendantNames, internalVariantPropNames = config.internalVariantPropNames, internalArgPropNames = config.internalArgPropNames;\r\n    var reservedPropNames = [\"variants\", \"args\", \"overrides\"];\r\n    var variants = mergeVariants(omit.apply(void 0, __spreadArray([pick.apply(void 0, __spreadArray([props], internalVariantPropNames))], reservedPropNames)), props.variants);\r\n    var args = mergeArgs(omit.apply(void 0, __spreadArray([pick.apply(void 0, __spreadArray([props], internalArgPropNames))], reservedPropNames)), props.args);\r\n    var overrides = mergeFlexOverrides(omit.apply(void 0, __spreadArray(__spreadArray(__spreadArray([pick.apply(void 0, __spreadArray([props], descendantNames))], internalArgPropNames), internalVariantPropNames), reservedPropNames)), props.overrides);\r\n    var leftoverProps = omit.apply(void 0, __spreadArray(__spreadArray(__spreadArray([props,\r\n        \"variants\",\r\n        \"args\",\r\n        \"overrides\"], descendantNames), internalVariantPropNames), internalArgPropNames));\r\n    if (Object.keys(leftoverProps).length > 0) {\r\n        overrides = mergeFlexOverrides(overrides, (_a = {},\r\n            _a[name] = {\r\n                props: leftoverProps,\r\n            },\r\n            _a));\r\n    }\r\n    return { variants: variants, args: args, overrides: overrides };\r\n}\n\nvar isDefaultValue = function (val) { return val === \"PLEASE_RENDER_INSIDE_PROVIDER\"; };\r\nvar seenDefaultVariants = {};\r\nfunction ensureGlobalVariants(globalVariantValues) {\r\n    Object.entries(globalVariantValues)\r\n        .filter(function (_a) {\r\n        _a[0]; var value = _a[1];\r\n        return isDefaultValue(value);\r\n    })\r\n        .forEach(function (_a) {\r\n        var key = _a[0]; _a[1];\r\n        globalVariantValues[key] = undefined;\r\n        if (!seenDefaultVariants[key] && \"development\" === \"development\") {\r\n            seenDefaultVariants[key] = true;\r\n            var providerName = \"\" + key[0].toUpperCase() + key.substring(1) + \"Context.Provider\";\r\n            console.warn(\"Plasmic context value for global variant \\\"\" + key + \"\\\" was not provided; please use \" + providerName + \" at the root of your React app. Learn More: https://www.plasmic.app/learn/other-assets/#global-variants\");\r\n        }\r\n    });\r\n    return globalVariantValues;\r\n}\n\nvar PlasmicLink = React__default[\"default\"].forwardRef(function PlasmicLink(props, ref) {\r\n    // props.href is required for nextjs; if no props.href,\r\n    // then we just render the default anchor element\r\n    if (props.platform === \"nextjs\" && props.href) {\r\n        var nextjsProps = [\r\n            \"href\",\r\n            \"replace\",\r\n            \"scroll\",\r\n            \"shallow\",\r\n            \"passHref\",\r\n            \"prefetch\",\r\n            \"locale\",\r\n        ];\r\n        return React__default[\"default\"].createElement(props.component, pick.apply(void 0, __spreadArray([props], nextjsProps)), React__default[\"default\"].createElement(\"a\", exports.__assign({}, omit.apply(void 0, __spreadArray([props, \"component\", \"platform\"], nextjsProps)), { ref: ref })));\r\n    }\r\n    if (props.platform === \"gatsby\" && isInternalHref(props.href)) {\r\n        return React__default[\"default\"].createElement(props.component, exports.__assign(exports.__assign({}, omit(props, \"component\", \"platform\", \"href\")), { to: props.href, ref: ref }));\r\n    }\r\n    return React__default[\"default\"].createElement(\"a\", exports.__assign({}, omit(props, \"component\", \"platform\"), { ref: ref }));\r\n});\r\nfunction isInternalHref(href) {\r\n    return /^\\/(?!\\/)/.test(href);\r\n}\nfunction renderPlasmicSlot(opts) {\r\n    var as = opts.as, defaultContents = opts.defaultContents, value = opts.value, rest = __rest(opts, [\"as\", \"defaultContents\", \"value\"]);\r\n    var content = value === undefined ? defaultContents : value;\r\n    if (!content || (Array.isArray(content) && content.length === 0)) {\r\n        return null;\r\n    }\r\n    // If the content is a raw string, then we need to wrap the raw string\r\n    // into an element, in case the slot is inside a flex-gap\r\n    // container (you cannot apply margin to just a text node).\r\n    var maybeString = maybeAsString(content);\r\n    if (maybeString) {\r\n        content = React__namespace.createElement(\"div\", { className: \"__wab_slot-string-wrapper\" }, maybeString);\r\n    }\r\n    var nonEmptyProps = Object.keys(rest).filter(function (p) { return !!rest[p]; });\r\n    if (nonEmptyProps.length === 0) {\r\n        // No attrs to apply to the slot (which means the slot is unstyled), then\r\n        // just render the content directly; no need for style wrapper.\r\n        return React__namespace.createElement(React__namespace.Fragment, null, content);\r\n    }\r\n    return React__namespace.createElement(as || \"div\", mergeProps({ className: \"__wab_slot\" }, rest), content);\r\n}\r\nfunction maybeAsString(node) {\r\n    // Unwrap fragments\r\n    if (React__namespace.isValidElement(node) && node.type === React__namespace.Fragment) {\r\n        return maybeAsString(node.props.children);\r\n    }\r\n    if (typeof node === \"string\") {\r\n        return node;\r\n    }\r\n    if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\r\n        return node[0];\r\n    }\r\n    return undefined;\r\n}\n\nvar listeners = [];\r\nvar queries = {};\r\nfunction matchScreenVariants() {\r\n    if (!isBrowser) {\r\n        return [];\r\n    }\r\n    return Object.entries(queries)\r\n        .filter(function (_a) {\r\n        var query = _a[1];\r\n        return window.matchMedia(query).matches;\r\n    })\r\n        .map(function (_a) {\r\n        var name = _a[0];\r\n        return name;\r\n    });\r\n}\r\n// undefined if screen variants have never been calculated\r\nvar curScreenVariants = undefined;\r\nfunction recalculateScreenVariants() {\r\n    var screenVariant = matchScreenVariants();\r\n    if (!curScreenVariants ||\r\n        screenVariant.join(\"\") !== curScreenVariants.join(\"\")) {\r\n        curScreenVariants = screenVariant;\r\n        ReactDOM__default__default[\"default\"].unstable_batchedUpdates(function () {\r\n            return listeners.forEach(function (listener) { return listener(); });\r\n        });\r\n    }\r\n}\r\nfunction ensureInitCurScreenVariants() {\r\n    // Initializes curScreenVariants if it hadn't been before. Note that this must\r\n    // be called from within an effect.\r\n    if (curScreenVariants === undefined) {\r\n        curScreenVariants = matchScreenVariants();\r\n    }\r\n}\r\nif (isBrowser) {\r\n    window.addEventListener(\"resize\", recalculateScreenVariants);\r\n}\r\nfunction createUseScreenVariants(isMulti, screenQueries) {\r\n    Object.assign(queries, screenQueries);\r\n    curScreenVariants = undefined;\r\n    return function () {\r\n        // It is important that upon first render, we return [] or undefined, because\r\n        // that is what SSR will use, and the client must match.  In an effect (which\r\n        // only happens on the client), we then actually ask for the real screen variant\r\n        // and, if different from [] or undefined, forces a re-render.\r\n        var _a = React__namespace.useState(), updateState = _a[1];\r\n        var lastScreenVariantsRef = React__namespace.useRef(curScreenVariants || []);\r\n        // We do useLayoutEffect instead of useEffect to immediately\r\n        // register our forceUpdate. This ensures that if there was\r\n        // a window resize event between render and effects, that the\r\n        // listener will be registered in time\r\n        useIsomorphicLayoutEffect(function () {\r\n            var updateIfChanged = function () {\r\n                if (curScreenVariants &&\r\n                    lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")) {\r\n                    lastScreenVariantsRef.current = curScreenVariants;\r\n                    // Force update\r\n                    updateState({});\r\n                }\r\n            };\r\n            // Listeners are invoked whenever the window is resized\r\n            listeners.push(updateIfChanged);\r\n            // Initialize the curScreenVariants for the first time.  We don't need\r\n            // to invoke the listeners here because all components will already\r\n            // have this effect running and will re-render if the real screen\r\n            // variant is non-empty.\r\n            ensureInitCurScreenVariants();\r\n            // Now, if the curScreenVariants differs from what we returned last,\r\n            // then force a re-render.\r\n            updateIfChanged();\r\n            return function () {\r\n                // Remove our listener on unmount\r\n                listeners.splice(listeners.indexOf(updateIfChanged), 1);\r\n            };\r\n        }, []);\r\n        if (isMulti) {\r\n            return curScreenVariants || [];\r\n        }\r\n        else if (curScreenVariants) {\r\n            return curScreenVariants[curScreenVariants.length - 1];\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n}\n\nfunction useFocused(opts) {\r\n    var _a = $f7dceffc5ad7768b$export$4e328f61c538687f({\r\n        within: false,\r\n        isTextInput: opts.isTextInput,\r\n    }), isFocused = _a.isFocused, focusProps = _a.focusProps;\r\n    return [isFocused, focusProps];\r\n}\r\nfunction useFocusVisible(opts) {\r\n    var _a = $f7dceffc5ad7768b$export$4e328f61c538687f({\r\n        within: false,\r\n        isTextInput: opts.isTextInput,\r\n    }), isFocusVisible = _a.isFocusVisible, focusProps = _a.focusProps;\r\n    return [isFocusVisible, focusProps];\r\n}\r\nfunction useFocusedWithin(opts) {\r\n    var _a = $f7dceffc5ad7768b$export$4e328f61c538687f({\r\n        within: true,\r\n        isTextInput: opts.isTextInput,\r\n    }), isFocused = _a.isFocused, focusProps = _a.focusProps;\r\n    return [isFocused, focusProps];\r\n}\r\nfunction useFocusVisibleWithin(opts) {\r\n    var _a = $f7dceffc5ad7768b$export$4e328f61c538687f({\r\n        within: true,\r\n        isTextInput: opts.isTextInput,\r\n    }), isFocusVisible = _a.isFocusVisible, focusProps = _a.focusProps;\r\n    return [isFocusVisible, focusProps];\r\n}\r\nfunction useHover() {\r\n    var _a = React__namespace.useState(false), isHover = _a[0], setHover = _a[1];\r\n    return [\r\n        isHover,\r\n        {\r\n            onMouseEnter: function () { return setHover(true); },\r\n            onMouseLeave: function () { return setHover(false); },\r\n        },\r\n    ];\r\n}\r\nfunction usePressed() {\r\n    var _a = React__namespace.useState(false), isPressed = _a[0], setPressed = _a[1];\r\n    return [\r\n        isPressed,\r\n        {\r\n            onMouseDown: function () { return setPressed(true); },\r\n            onMouseUp: function () { return setPressed(false); },\r\n        },\r\n    ];\r\n}\r\nvar TRIGGER_TO_HOOK = {\r\n    useHover: useHover,\r\n    useFocused: useFocused,\r\n    useFocusVisible: useFocusVisible,\r\n    useFocusedWithin: useFocusedWithin,\r\n    useFocusVisibleWithin: useFocusVisibleWithin,\r\n    usePressed: usePressed,\r\n};\r\n/**\r\n * Installs argment trigger. All the useTrigger calls must use hardcoded `trigger` arg,\r\n * as it's not valid to install variable React hooks!\r\n */\r\nfunction useTrigger(trigger, opts) {\r\n    return TRIGGER_TO_HOOK[trigger](opts);\r\n}\n\n// Utilities used by generated code\r\nvar classNames = classNames$1;\n\nexports.PlasmicImg = PlasmicImg;\nexports.PlasmicLink = PlasmicLink;\nexports.PlasmicRootProvider = PlasmicRootProvider;\nexports.Stack = Stack;\nexports.__rest = __rest;\nexports.__spreadArray = __spreadArray;\nexports.classNames = classNames;\nexports.createPlasmicElementProxy = createPlasmicElementProxy;\nexports.createUseScreenVariants = createUseScreenVariants;\nexports.deriveRenderOpts = deriveRenderOpts;\nexports.ensureGlobalVariants = ensureGlobalVariants;\nexports.groupBy = groupBy;\nexports.hasVariant = hasVariant;\nexports.mapValues = mapValues;\nexports.omit = omit;\nexports.pick = pick;\nexports.renderPlasmicSlot = renderPlasmicSlot;\nexports.useTrigger = useTrigger;\n","imports":["react","react-dom"],"type":"code"},{"fileName":"render__cF1ytNay3k.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar index = require('./index.js');\nvar ph = require('@plasmicapp/host');\nrequire('react-dom');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar ph__namespace = /*#__PURE__*/_interopNamespace(ph);\n\nconst _jsxFileName = \"/tmp/tmp-41-UuaM30aZWQhN/render__cF1ytNay3k.tsx\"; function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\n  \n    \n    \n    \n\n    \n    \n\n\n\n\n    const PlasmicDetails__VariantProps = new Array();\n  \n\n    \n    \n\n    const PlasmicDetails__ArgProps = new Array();\n  \n\n    \n\n\n\n\n\n\n\n\n\n    \n\n    \n\n    \n\n    const defaultDetails__Args = {\n    \n  };\n\n    \n    function PlasmicDetails__RenderFunc(\n      props\n\n\n\n\n\n\n    ) {\n      const {variants, overrides, forNode, } = props;\n      Object.assign({}, defaultDetails__Args, props.args);\n      _optionalChain([ph__namespace, 'access', _ => _.useDataEnv, 'optionalCall', _2 => _2()]) || {};\n\n      \n\n      \n\n      \n      \n      return (\n        index.createPlasmicElementProxy(React__namespace.Fragment, {__self: this, __source: {fileName: _jsxFileName, lineNumber: 94}}\n      \n\n      , index.createPlasmicElementProxy('style', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 97}}, `\n        body {\n          margin: 0;\n        }\n      `)\n\n\n      , index.createPlasmicElementProxy('div', { className: \"plasmic_page_wrapper\", __self: this, __source: {fileName: _jsxFileName, lineNumber: 104}}\n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    'data-plasmic-override': overrides.root2,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"root_reset_3wwtiyGgv2Gzn5cquQ9Prp\", \"plasmic_default_styles\", \"plasmic_mixins\", \"Details__root2__m1Bj4\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 106}}\n    \n    \n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"__wab_text\", \"Details__text__anSa\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 117}}\n    \n    \n          , index.createPlasmicElementProxy(React__namespace.Fragment, {__self: this, __source: {fileName: _jsxFileName, lineNumber: 127}}, index.createPlasmicElementProxy(React__namespace.Fragment, {__self: this, __source: {fileName: _jsxFileName, lineNumber: 127}}, \"\")\n  , index.createPlasmicElementProxy('h2', {\n    \n    \n    'data-plasmic-override': overrides.h2,\n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__h2\", \"__wab_text\", \"Details__h2__rWoXe\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 128}}\n    \n    \n          ,  \"Title here\" \n        )\n  , index.createPlasmicElementProxy(React__namespace.Fragment, {__self: this, __source: {fileName: _jsxFileName, lineNumber: 140}}, \"\"))\n        )\n\n\n  , index.createPlasmicElementProxy('div', {\n    \n    \n    \n    \n    \n    \n    className: index.classNames(\"plasmic_default__all\", \"plasmic_default__div\", \"__wab_text\", \"Details__text__evZM\"), __self: this, __source: {fileName: _jsxFileName, lineNumber: 144}}\n    \n    \n          ,  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \" \n        )\n\n\n  , index.createPlasmicElementProxy(index.PlasmicImg, {\n    \n    \n    'data-plasmic-override': overrides.img,\n    \n    \n    \n    alt: \"\",\nclassName: index.classNames(\"Details__img__k3ZYn\"),\ndisplayHeight: (\"auto\" ),\ndisplayMaxHeight: (\"none\" ),\ndisplayMaxWidth: (\"100%\" ),\ndisplayMinHeight: (\"0\" ),\ndisplayMinWidth: (\"0\" ),\ndisplayWidth: (\"716px\" ),\nloader: \"plasmic\",\nloading: (\"lazy\" ),\nsrc: {\"src\":\"https://img.plasmic.app/img-optimizer/v1/img/9ccedc330e0f204749d156f5a16e4b57.jpg\",\"fullWidth\":400,\"fullHeight\":250}, __self: this, __source: {fileName: _jsxFileName, lineNumber: 158}}\n    \n    )\n\n        )\n\n      )\n\n  )\n      ) ;\n    }\n\n    \n\n    \n    const PlasmicDescendants = {\n      root2: [\"root2\", \"h2\", \"img\"],\nh2: [\"h2\"],\nimg: [\"img\"],\n    } ;\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function makeNodeComponent(nodeName) {\n      \n      const func = function(props) {\n        const {variants, args, overrides} = index.deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicDetails__ArgProps,\n          internalVariantPropNames: PlasmicDetails__VariantProps,\n        });\n        \n        return PlasmicDetails__RenderFunc({\n          variants, args, overrides, forNode: nodeName, \n        });\n      };\n      if (nodeName === \"root2\") {\n        func.displayName = \"PlasmicDetails\";\n      } else {\n        func.displayName = `PlasmicDetails.${nodeName}`;\n      }\n      return func;\n    }\n\n    const PlasmicDetails = Object.assign(\n      // Top-level PlasmicDetails renders the root element\n      makeNodeComponent(\"root2\"),\n      {\n        // Helper components rendering sub-elements\n        \n\n        // Metadata about props expected for PlasmicDetails\n        internalVariantProps: PlasmicDetails__VariantProps,\n        internalArgProps: PlasmicDetails__ArgProps,\n\n        \n\n        \n\n        \n      }\n    );\n    /* prettier-ignore-end */\n\nexports.PlasmicDetails = PlasmicDetails;\nexports.PlasmicDetails__ArgProps = PlasmicDetails__ArgProps;\nexports.PlasmicDetails__VariantProps = PlasmicDetails__VariantProps;\nexports[\"default\"] = PlasmicDetails;\nexports.defaultDetails__Args = defaultDetails__Args;\n","imports":["react","index.js","@plasmicapp/host","react-dom","css__cF1ytNay3k.css"],"type":"code"},{"fileName":"root-provider.js","code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar index = require('./index.js');\nrequire('react');\nrequire('react-dom');\n\n\n\nexports[\"default\"] = index.PlasmicRootProvider;\n","imports":["index.js","react","react-dom"],"type":"code"}],"server":[]},"external":["@plasmicapp/host","react","react-dom"],"components":[{"id":"cF1ytNay3k","displayName":"Details","usedComponents":[],"projectId":"3wwtiyGgv2Gzn5cquQ9Prp","name":"Details","renderFile":"render__cF1ytNay3k.js","skeletonFile":"comp__cF1ytNay3k.js","cssFile":"css__cF1ytNay3k.css","path":"/details","isPage":true,"entry":"render__cF1ytNay3k.js","isCode":false,"pageMetadata":{"path":"/details","description":"","title":null,"canonical":null},"metadata":{}}],"globalGroups":[{"id":"250s3ALkdwuPN","projectId":"3wwtiyGgv2Gzn5cquQ9Prp","name":"Screen","contextFile":"global__250s3ALkdwuPN.js","type":"global-screen","useName":"useScreen"}],"projects":[{"id":"3wwtiyGgv2Gzn5cquQ9Prp","name":"Demo","version":"latest","remoteFonts":[{"url":"https://fonts.googleapis.com/css2?family=Inter%3Aital%2Cwght%400%2C400%3B0%2C500%3B0%2C600%3B0%2C700%3B0%2C900&family=Inconsolata%3Aital%2Cwght%400%2C400%3B0%2C500%3B0%2C600%3B0%2C700%3B0%2C900&display=swap"}],"globalContextsProviderFileName":""}],"activeSplits":[]},"remoteFontUrls":["https://fonts.googleapis.com/css2?family=Inter%3Aital%2Cwght%400%2C400%3B0%2C500%3B0%2C600%3B0%2C700%3B0%2C900&family=Inconsolata%3Aital%2Cwght%400%2C400%3B0%2C500%3B0%2C600%3B0%2C700%3B0%2C900&display=swap"]},"queryCache":{}},"__N_SSG":true}